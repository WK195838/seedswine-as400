     F/TITLE REO012 supplier quotation maint
     F*****************************************************************
     F* Copyright   Remy Eastward Ltd.            1992
     F*****************************************************************
     F*
     F*  Program ID          -    REO012
     F*  Application ID      -    POA001
     F*  Application Name    -    supplier quotation maint
     F*  Date Generated      -    Jan 10, 1992
     F*
     F*****************************************************************
     F*  Files Usage
     F*
     F*  POPALF      - (I/DISK   ) 供應商產品報價檔
     F*  MTMBPF      - (I/DISK   ) 供應商基本資料檔
     F*  POPAPF      - (I/DISK   ) 供應商產品報價檔
     F*  POPALFX     - (U/DISK   ) 供應商產品報價檔
     F*  POPAPFX     - (U/DISK   ) 供應商產品報價檔
     F*  REO012D     - (C/WORKSTN) Generated display file
     F*
     F*****************************************************************
     F*  Function Of Indicators
     F*
     F*  SCEXIT     - Exit window panel
     F*
     F* N79     - SCR004 PUTOVR
     F*
     F*  SC0001     - List Screen for POPALF
     F*
     F*  01     - SCR001S1 / FL0001 : DSPATR(RI)
     F*  02     - SCR001S1 / FL0001 : DSPATR(UL)
     F*  03     - SCR001C1 / PS0101 : DSPATR(PR)
     F*  04     - SCR001C1 / PS0102 : DSPATR(PR)
     F*  05     - SCR001C1 / PS0103 : DSPATR(PR)
     F*  63     - SCR001C1 SFLDSPCTL
     F*  64     - SCR001C1 SFLDSP
     F*  65     - SCR001S1 SFLNXTCHG
     F*  66     - SCR001C1 SFLINZ
     F*  80     - SCR001S1 / FL0001 : DSPATR(PC)
     F*  99     - SCR001 OVERLAY
     F* N63     - SCR001C1 SFLCLR
     F* N67     - SCR001C1 SFLEND
     F* N79     - SCR001 PUTOVR
     F* N79     - SCR001C1 PUTOVR
     F*
     F*  SC0002     - Detail Screen for POPALF
     F*
     F*  01     - SCR002 / PA04 : DSPATR(PR)
     F*  02     - SCR002 / PA06 : DSPATR(PR)
     F*  03     - SCR002 / PA07 : DSPATR(PR)
     F*  04     - SCR002 / PA08 : DSPATR(PR)
     F*  05     - SCR002 / PA10 : DSPATR(PR)
     F*  06     - SCR002 / PA11 : DSPATR(PR)
     F*  80     - SCR002 / PA04 : DSPATR(PC)
     F*  80     - SCR002 / PA08 : DSPATR(PC)
     F*  80     - SCR002 / PA07 : DSPATR(PC)
     F*  80     - SCR002 / PA10 : DSPATR(PC)
     F*  80     - SCR002 / PA11 : DSPATR(PC)
     F*  80     - SCR002 / PA06 : DSPATR(PC)
     F*  99     - SCR002S1 DSPATR(PC)
     F* N79     - SCR002 PUTOVR
     F*
     F*  SC0003     - List Screen for POPAPF
     F*
     F*  01     - SCR003S1 / FL0003 : DSPATR(RI)
     F*  02     - SCR003S1 / FL0003 : DSPATR(UL)
     F*  63     - SCR003C1 SFLDSPCTL
     F*  64     - SCR003C1 SFLDSP
     F*  65     - SCR003S1 SFLNXTCHG
     F*  66     - SCR003C1 SFLINZ
     F*  80     - SCR003S1 / PA03 : DSPATR(PC)
     F*  80     - SCR003S1 / PA05 : DSPATR(PC)
     F*  80     - SCR003S1 / PA09 : DSPATR(PC)
     F*  80     - SCR003S1 / FL0003 : DSPATR(PC)
     F*  99     - SCR003 OVERLAY
     F* N63     - SCR003C1 SFLCLR
     F* N67     - SCR003C1 SFLEND
     F* N79     - SCR003 PUTOVR
     F* N79     - SCR003C1 PUTOVR
     F*
     F*****************************************************************
     F*  Function Of Subroutines
     F*
     F* SMAIN - Main flow of the program.
     F* SEND - END of program.
     F* S001 - List Screen for POPALF
     F* S002 - Detail Screen for POPALF
     F* S003 - List Screen for POPAPF
     F* S004 - Exit window panel
     F* SREDSP -  Redisplay Windows within stack.
     F* S01BKW - SCRN SUB
     F* S01EDT - SCRN SUB
     F* S01FWD - SCRN SUB
     F* S03BKW - SCRN SUB
     F* S03EDT - SCRN SUB
     F* S03FWD - SCRN SUB
     F* SCMD - Processes OS/400 Commands
     F* SMSG - Message subfile handler
     F* SHELP - Process help text.
     F* S005   - @SETLL D.POA001M,F.POPALF,SVK001,SVK002,SVK003
     F* S006   - @GETREC D.POA001M,F.POPALF,*lock,*eq,SVK001,SVK002,SVK003
     F* S007   - @GETREC D.POA001M,F.MTMBPF,*eq,PA01
     F* S008   - @GETREC D.POA001M,F.POPALF,*eq,SVK001,SVK002,SVK003
     F* S009   - @UPDATE D.POA001M,F.POPALF
     F* S010   - @DELETE D.POA001M,F.POPALF
     F* S011   - @WRITE D.POA001M,F.POPALF
     F* S012   - @SETLL D.POA001M,F.POPAPF,SVK004,SVK005,SVK006
     F* S013   - @GETBLK D.POA001M,F.POPALF,F.MTMBPF,*PV
     F* S014   - Process To Check BOF -  POPALF    MTMBPF
     F* S015   - Process To Initialize SubFile - SCR001S1
     F* S016   - Process To Check EOF -  POPALF    MTMBPF
     F* S017   - @GETREC D.POA001M,F.POPALF,F.MTMBPF,*EQ,PA01,PA02,PA03
     F* S018   - @GETBLK D.POA001M,F.POPAPF,*PV,SVK004,SVK005
     F* S019   - Process To Check BOF -  POPAPF
     F* S020   - Process To Initialize SubFile - SCR003S1
     F* S021   - Process To Check EOF -  POPAPF
     F* S022   - @WRITE D.POA001M,F.POPAPF
     F* S023   - @UPDATE D.POA001M,F.POPAPF
     F* S024   - @DELETE D.POA001M,F.POPAPF
     F* *PSSR - Program Execution Errors Handler
     F* SATRIB - Display Attribute Handler
     F* SLOCK - Update Lock Flag
     F* SFERR - File Exception Handler
     F* SMVTOF - Move Fields From Work Area To File(s)
     F* SMVTOW - Move Fields From File(s) To Work Area
     F*
     F*****************************************************************
     F*            F i l e     S p e c i f i c a t i o n
     F*****************************************************************
     FREO012D CF  E                    WORKSTN
     F                                        RRN1  KSFILE SCR001S1
     F                                        RRN2  KSFILE SCR003S1
     F                                              KINFDS DSPFDS
     FPOPALF  IF  E           K        DISK
     F                                              KINFDS FIDS01
     F                                              KINFSR SFERR
     FMTMBPF  IF  E           K        DISK
     F                                              KINFDS FIDS02
     F                                              KINFSR SFERR
     FPOPAPF  IF  E           K        DISK
     F            PA0                               KRENAMEFMT001
     F                                              KINFDS FIDS03
     F                                              KINFSR SFERR
     FPOPALFX UF  E                    DISK                      A
     F                                              KINFDS FIDS04
     F            PA0                               KRENAMEPA0X
     F                                              KINFSR SFERR
     FPOPAPFX UF  E                    DISK                      A
     F                                              KINFDS FIDS05
     F            PA0                               KRENAMEFMT002
     F                                              KINFSR SFERR
     F*
     E*****************************************************************
     E*      A r r a y  /  T a b l e   S p e c i f i c a t i o n
     E*****************************************************************
     E                    A01        11  5
     E                    A02        11 10
     E                    A03        11  9
     E                    A04         5  5
     E                    A05         5 10
     E                    A06         5  9
     E                    CMD     1   1 80               OS/400 Commands
     E                    CST      2560  1               Command string
     E                    SID        99  8               Scrn stk
     E                    STY        99  1               Scr type
     E                    A1      1  13 80               Alpha constants i
     E                    DA6        15  1               Fld Attr. Wrk Ary
     E                    DA3        17  2               Fld Attr. Wrk Ary
     E                    DA1     1  14 24   DA2    34   Fld Attr. Indic t
     E*
     I*****************************************************************
     I*            I n p u t    S p e c i f i c a t i o n
     I*****************************************************************
     IFIDS02      DS
     I                                     *STATUS  STS02
     IFIDS01      DS
     I                                     *STATUS  STS01
     I                                    B 397 4000REC01
     IFIDS03      DS
     I                                     *STATUS  STS03
     I                                    B 397 4000REC03
     IFIDS04      DS
     I                                     *STATUS  STS04
     I                                    B 397 4000REC04
     IFIDS05      DS
     I                                     *STATUS  STS05
     I                                    B 397 4000REC05
     I*
     I* INFDS for cursor location
     I*
     IDSPFDS      DS
     I                                      370 370 ROW
     I                                      371 371 COL
     I*
     I* Work Data Structure for cursor
     I*
     I@DS001      DS
     I                                    B   1   20HALFWD
     I                                        2   2 BYTE2
     I*
     I* Display Attribute Structure
     I*
     I@DS002      DS
     I                                        1  10 FLDSCR
     I                                       11  20 FLDNAM
     I                                       21  240FLDINX
     I                                       25  25 DSPERR
     I                                       26  26 #DS
     I                                       27  27 #HI
     I                                       28  28 #RI
     I                                       29  29 #UL
     I                                       30  30 #BL
     I                                       31  31 #CS
     I                                       32  32 #PC
     I                                       33  33 #ND
     I                                       34  34 #PR
     I                                       35  35 #GN
     I                                       36  36 #RD
     I                                       37  37 #PK
     I                                       38  38 #WT
     I                                       39  39 #TQ
     I                                       40  40 #YW
     I                                       41  41 #BU
     I                                       27  41 DA6
     I                                       11  41 #ATRIB
     I                                       25  280#FROM
     I                                       29  320#TO
     I                                       25  320#CLF
     I                                        1  24 #MAP
     I*
     I* Message data structure
     I*
     I@DS003      DS
     I                                        1 132 MSGDTA
     I                                        1  51 UMESG1
     I                                       52 102 UMESG2
     I                                      103 132 UMESG3
     I*
     I* Program status data structure
     I*
     ISDS        SDS
     I                                      244 253 WSID
     I                                      254 263 USER
     I                                     *PROGRAM PGM
     I                                       11  150USTAT
     I                                       21  28 USRCLN
     I                                       29  36 UROUTN
     I                                       40  46 MSGID
     I                                       81  90 ULIB
     I                                       91 170 UMSGTX
     I                                      201 208 UFILE
     I                                      209 213 UFSTAT
     I                                      228 235 UFSRCL
     I                                      264 2690UJOBN
     I                                      288 2930UCDAT
     I                                      294 2990UCTIM
     I*
     C*****************************************************************
     C*            P a r a m e t e r     L i s t
     C*****************************************************************
     C*
     C           PMSGCL    PLIST
     C                     PARM           MSGACT  1
     C                     PARM           MSGID
     C                     PARM           MSGF   10
     C                     PARM           MSGFL  10
     C                     PARM           MSGDTA
     C*
     C           PHELP     PLIST
     C                     PARM           APPSET
     C                     PARM           APPTYP
     C                     PARM           APPPGM
     C                     PARM           APPSCR
     C                     PARM           APPROW
     C                     PARM           APPCOL
     C*****************************************************************
     C*                   K e y      L i s t
     C*****************************************************************
     C*
     C           K0001     KLIST
     C                     KFLD           KA0101
     C                     KFLD           KA0202
     C                     KFLD           KA0303
     C*
     C           K0002     KLIST
     C                     KFLD           KA0101
     C*
     C           K0003     KLIST
     C                     KFLD           KA0101
     C                     KFLD           KA0202
     C*
     C*****************************************************************
     C*        V a r i a b l e s     D e c l a r a t i o n
     C*****************************************************************
  01-C           LRFLAG    IFNE 'N'
    C           *LIKE     DEFN PA03      WA03             產品代號
    C                     MOVE *ZEROS    Z1      30       Loop Counter . . . .S
    C                     MOVE *ZEROS    Z2      30       Loop Counter . . . .S
    C                     MOVE *ZEROS    EXFLAG  10
    C                     MOVE *ZEROS    EXTSCR  10
    C                     MOVE *ZEROS    FL0001  10
    C                     MOVE *BLANKS   FL0002 18
    C                     MOVE *ZEROS    FL0003  10
    C                     MOVE *ZEROS    F12FLG  10
    C                     MOVE *ZEROS    Z3      30       Loop Counter . . . .S
    C                     MOVE *ZEROS    I03     30
    C                     MOVE *ZEROS    LOOPCT  30
    C                     MOVE *ZEROS    MNTFLG  10
    C                     MOVE *BLANKS   MODDSC  8
    C                     MOVE *ZEROS    MODE    10
    C                     MOVE *ZEROS    POSFLG  10
    C                     MOVE *ZEROS    PRMCNT  30
    C                     MOVE *BLANKS   PRM001  5
    C                     MOVE *BLANKS   PRM002 10
    C                     MOVE *BLANKS   PRM003  9
    C                     MOVE *BLANKS   PS0101  5
    C                     MOVE *BLANKS   PS0102 10
    C                     MOVE *BLANKS   PS0103  9
    C                     MOVE *BLANKS   PS0301  9
    C                     MOVE *BLANKS   SVK001  5
    C                     MOVE *BLANKS   SVK002 10
    C                     MOVE *BLANKS   SVK003  9
    C                     MOVE *BLANKS   SVK004  5
    C                     MOVE *BLANKS   SVK005 10
    C                     MOVE *BLANKS   SVK006  9
    C                     MOVE *ZEROS    UPDFLG  10
    C                     MOVE *ZEROS    LCK02   10       File lock flag
    C                     MOVE *ZEROS    LCK01   10       File lock flag
    C                     MOVE *ZEROS    LCK03   10       File lock flag
    C                     MOVE *ZEROS    LCK04   10       File lock flag
    C                     MOVE *ZEROS    LCK05   10       File lock flag
    C                     MOVE *BLANKS   CMDERR  1
    C                     MOVE 'N'       IOFLAG  1
    C                     MOVE *BLANKS   SCRNID  8        Scrn ID
    C                     MOVE *BLANKS   IN01   99        Save Ind
    C                     MOVE *BLANKS   IN02   99        Save Ind
    C                     MOVE *BLANKS   DSPLY   1        Display screen flag
    C                     MOVE *BLANKS   SWRD01  1        RD STS
    C                     MOVE *BLANKS   SWRD02  1        RD STS
    C                     MOVE *BLANKS   SWRD03  1        RD STS
    C                     MOVE *BLANKS   KA0101  5        PA01
    C                     MOVE *BLANKS   KA0202 10        PA02
    C                     MOVE *BLANKS   KA0303  9        PA03
    C                     MOVE *BLANKS   SW0001  1        DEL SW
    C                     MOVE 'N'       CMDKEY  1         Cmd key pressed flag
    C                     MOVE 'N'       MSGFLG  1        Display Msg Flg
    C                     MOVE *BLANKS   APPSET 10
    C                     MOVE 'D'       APPTYP  1
    C                     MOVE *BLANKS   APPSCR 10
    C                     MOVE *ZEROS    APPROW  30
    C                     MOVE *ZEROS    APPCOL  30
    C                     MOVE *ZEROS    UERCNT  10
    C                     MOVE *BLANKS   URSUME  6
    C                     MOVEL'RESET'   APPSET
    C                     MOVELPGM       APPPGM 10
    C                     Z-ADD*ZEROS    LEN    155
    C                     Z-ADD*ZEROS    X0      40       INDEX 0
    C                     Z-ADD*ZEROS    X1      30       INDEX 1
    C                     Z-ADD*ZEROS    WFILE#  20       FILE#
    C                     Z-ADD*ZEROS    SP      30       Stk ptr
    C                     Z-ADD*ZEROS    CT      30       Counter
    C                     Z-ADD*ZEROS    NRSLT0 216
    C                     Z-ADD*ZEROS    RNM001 216
    C                     Z-ADD*ZEROS    RNM002 216
    C                     Z-ADD*ZEROS    RNM003 216
    C                     Z-ADD*ZEROS    RNM004 216
    C                     Z-ADD*ZEROS    RNM005 216
    C                     Z-ADD*ZEROS    WCNTR   30       COUNTER
    C                     Z-ADD*ZEROS    RNM006 216
    C                     Z-ADD*ZEROS    RNM007 216
    C                     Z-ADD*ZEROS    RNM008 216
    C                     Z-ADD*ZEROS    RNM009 216
    C                     Z-ADD*ZEROS    RNM010 216
    C                     Z-ADD*ZEROS    RNM011 216
    C                     Z-ADD*ZEROS    RNM012 216
    C                     Z-ADD*ZEROS    RNM013 216
    C                     Z-ADD*ZEROS    RNM014 216
    C                     Z-ADD*ZEROS    RNM015 216
    C                     Z-ADD*ZEROS    SVS01   50       SV STS          00501
    C                     Z-ADD*ZEROS    RNM016 216
    C                     Z-ADD*ZEROS    RNM017 216
    C                     Z-ADD*ZEROS    RNM018 216
    C                     Z-ADD*ZEROS    RNM019 216
    C                     Z-ADD*ZEROS    RNM020 216
    C                     Z-ADD*ZEROS    WRRN01  30       WRK RRN
    C                     Z-ADD*ZEROS    WADJ01  30       WRK ADJ
    C                     Z-ADD*ZEROS    WLCNTR  20       LOOP CT
    C                     Z-ADD*ZEROS    SVS02   50       SV STS          00501
    C                     Z-ADD*ZEROS    RNM021 216
    C                     Z-ADD*ZEROS    RNM022 216
    C                     Z-ADD*ZEROS    RNM023 216
    C                     Z-ADD*ZEROS    RNM024 216
    C                     Z-ADD*ZEROS    RNM025 216
    C                     Z-ADD*ZEROS    RNM026 216
    C                     Z-ADD*ZEROS    RNM027 216
    C                     Z-ADD*ZEROS    RNM028 216
    C                     Z-ADD*ZEROS    RNM029 216
    C                     Z-ADD*ZEROS    RNM030 216
    C                     Z-ADD*ZEROS    RNM031 216
    C                     Z-ADD*ZEROS    RNM032 216
    C                     Z-ADD*ZEROS    RNM033 216
    C                     Z-ADD*ZEROS    RNM034 216
    C                     Z-ADD*ZEROS    RNM035 216
    C                     Z-ADD*ZEROS    RNM036 216
    C                     Z-ADD*ZEROS    RNM037 216
    C                     Z-ADD*ZEROS    RNM038 216
    C                     Z-ADD*ZEROS    RNM039 216
    C                     Z-ADD*ZEROS    RNM040 216
    C                     Z-ADD*ZEROS    WRRN02  30       WRK RRN
    C                     Z-ADD*ZEROS    WADJ02  30       WRK ADJ
    C                     Z-ADD*ZEROS    SVS03   50       SV STS
    C                     Z-ADD*ZEROS    RNM041 216
    C                     Z-ADD*ZEROS    RNM042 216
    C                     Z-ADD*ZEROS    RNM043 216
    C                     Z-ADD*ZEROS    RNM044 216
    C                     Z-ADD*ZEROS    RNM045 216
    C                     Z-ADD*ZEROS    RNM046 216
    C                     Z-ADD*ZEROS    RNM047 216
    C                     Z-ADD*ZEROS    RNM048 216
    C                     Z-ADD*ZEROS    RNM049 216
    C                     Z-ADD*ZEROS    RNM050 216
    C                     Z-ADD*ZEROS    RNM051 216
    C                     Z-ADD1         XYES    10       *YES keyword
    C                     Z-ADD*ZEROS    XNO     10       *NO keyword
  01-C                     END
     C                     MOVE *BLANK    LRFLAG  1
     C*
     C/EJECT
     C*****************************************************************
     C*        M a i n l i n e      R o u t i n e
     C*****************************************************************
     C                     EXSR SMAIN
     C*
     C/EJECT
     C*****************************************************************
     C* SMAIN - Main flow of the program.
     C*****************************************************************
01===C           SMAIN     BEGSR
|    C*
|    C*
|    C* Clear Message Subfile.
|    C                     MOVE 'C'       MSGACT
|    C                     EXSR SMSG
|    C                     WRITEMSGCTL
|    C*      *------------------------------------------*
|    C*      *  Process all screens.                    *
|    C*      *------------------------------------------*
|    C                     MOVEL'SC0001'  SCRNID
| 02-C           *INLR     DOWEQ'0'
| 03-C           SCRNID    CASEQ'SC0001'  S001
|   C           SCRNID    CASEQ'SC0002'  S002
|   C           SCRNID    CASEQ'SC0003'  S003
|   C           SCRNID    CASEQ'SCEXIT'  S004
|   C           SCRNID    CASEQ'SEND'    SEND
| 03-C                     END
| 02-C                     END
01===C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SEND - END of program.
     C*****************************************************************
02===C           SEND      BEGSR
|    C*
| 01-C           LRFLAG    IFEQ 'Y'
|   C           LRFLAG    OREQ *BLANK
|   C                     MOVE '1'       *INLR
| 01-C                     END
|    C                     MOVE *BLANK    SCRNID
|    C                     RETRN
02===C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* S001 - List Screen for POPALF
     C*****************************************************************
03===C           S001      BEGSR
|    C*
|    C                     MOVE 'Y'       DSPLY
|    C                     MOVEA'01000'   *IN,1
|    C                     MOVEA'0'       *IN,64
|    C                     MOVEA'11'      *IN,79
|    C*---------------------------------------------------------------*
|    C* Process Pre-Screen Actions.                                   *
|    C*                                                               *
|    C* ***  Clear list panel and start display on                    *
|    C* ***  first record in file. Performed only once                *
|    C* ***  at start of program.                                     *
|    C*                                                               *
|    C* F12FLG = 0                                                    *
|    C* PA01 = ' '                                                    *
|    C* PA02 = ' '                                                    *
|    C*                                                               *
|    C* Count number of parms passed.                                 *
|    C* Protect all parms first, Then if a parm was not               *
|    C* passed, unprotect it and reduce parm count.                   *
|    C*                                                               *
|    C* If parms are not generated, these fields                      *
|    C* will be blank.                                                *
|    C* @FLDATR PS0101,*PR                                            *
|    C* @FLDATR PS0102,*PR                                            *
|    C* @FLDATR PS0103,*PR                                            *
|    C* PRMCNT = 003                                                  *
|    C*                                                               *
|    C* @IF PRM003=' '                                                *
|    C* PRMCNT = PRMCNT-1                                             *
|    C* @FLDATR PS0103,*DS                                            *
|    C*                                                               *
|    C* @IF PRM002=' '                                                *
|    C* PRMCNT = PRMCNT-1                                             *
|    C* @FLDATR PS0102,*DS                                            *
|    C*                                                               *
|    C* @IF PRM001=' '                                                *
|    C* PRMCNT = PRMCNT-1                                             *
|    C* @FLDATR PS0101,*DS                                            *
|    C* @END                                                          *
|    C*                                                               *
|    C* @END                                                          *
|    C*                                                               *
|    C* @END                                                          *
|    C*                                                               *
|    C*                                                               *
|    C* Set Key values to parms passed                                *
|    C* SVK001 = PRM001                                               *
|    C* SVK002 = PRM002                                               *
|    C* SVK003 = PRM003                                               *
|    C*                                                               *
|    C* Set Reposition values to parms passed                         *
|    C* PS0101 = PRM001                                               *
|    C* PS0102 = PRM002                                               *
|    C* PS0103 = PRM003                                               *
|    C*                                                               *
|    C* Set file for list to first record in file                     *
|    C* @SETLL D.POA001M,F.POPALF,SVK001,SVK002,SVK003                *
|    C*                                                               *
|    C* Fill list Panel                                               *
|    C* @EXSUBR S01FWD                                                *
|    C*---------------------------------------------------------------*
|    C* ***  Clear list panel and start display on
|    C* ***  first record in file. Performed only once
|    C* ***  at start of program.
|    C*                                                               *
|    C* F12FLG = 0
|    C                     Z-ADD*ZERO     F12FLG
|    C* PA01 = ' '
|    C                     MOVEL*BLANKS   XA01
|    C* PA02 = ' '
|    C                     MOVEL*BLANKS   XA02
|    C*                                                               *
|    C* Count number of parms passed.
|    C* Protect all parms first, Then if a parm was not
|    C* passed, unprotect it and reduce parm count.
|    C*                                                               *
|    C* If parms are not generated, these fields
|    C* will be blank.
|    C* @FLDATR PS0101,*PR
|    C                     MOVE 'X'       #PR
|    C                     MOVEL'PS0101  'FLDNAM
|    C                     Z-ADD*ZERO     FLDINX
|    C                     MOVE *BLANK    FLDSCR
|    C                     MOVEL'SC0001  'FLDSCR
|    C                     EXSR SATRIB
|    C* @FLDATR PS0102,*PR
|    C                     MOVE 'X'       #PR
|    C                     MOVEL'PS0102  'FLDNAM
|    C                     Z-ADD*ZERO     FLDINX
|    C                     MOVE *BLANK    FLDSCR
|    C                     MOVEL'SC0001  'FLDSCR
|    C                     EXSR SATRIB
|    C* @FLDATR PS0103,*PR
|    C                     MOVE 'X'       #PR
|    C                     MOVEL'PS0103  'FLDNAM
|    C                     Z-ADD*ZERO     FLDINX
|    C                     MOVE *BLANK    FLDSCR
|    C                     MOVEL'SC0001  'FLDSCR
|    C                     EXSR SATRIB
|    C* PRMCNT = 003
|    C                     Z-ADD3         PRMCNT
|    C*                                                               *
|    C* @IF PRM003=' '
| 01-C           PRM003    IFEQ *BLANKS
|   C* PRMCNT = PRMCNT-1
|   C                     SUB  1         PRMCNT
|   C* @FLDATR PS0103,*DS
|   C                     MOVE 'X'       #DS
|   C                     MOVEL'PS0103  'FLDNAM
|   C                     Z-ADD*ZERO     FLDINX
|   C                     MOVE *BLANK    FLDSCR
|   C                     MOVEL'SC0001  'FLDSCR
|   C                     EXSR SATRIB
|   C*                                                               *
|   C* @IF PRM002=' '
| 02-C           PRM002    IFEQ *BLANKS
|   C* PRMCNT = PRMCNT-1
|   C                     SUB  1         PRMCNT
|   C* @FLDATR PS0102,*DS
|   C                     MOVE 'X'       #DS
|   C                     MOVEL'PS0102  'FLDNAM
|   C                     Z-ADD*ZERO     FLDINX
|   C                     MOVE *BLANK    FLDSCR
|   C                     MOVEL'SC0001  'FLDSCR
|   C                     EXSR SATRIB
|   C*                                                               *
|   C* @IF PRM001=' '
| 03-C           PRM001    IFEQ *BLANKS
|   C* PRMCNT = PRMCNT-1
|   C                     SUB  1         PRMCNT
|   C* @FLDATR PS0101,*DS
|   C                     MOVE 'X'       #DS
|   C                     MOVEL'PS0101  'FLDNAM
|   C                     Z-ADD*ZERO     FLDINX
|   C                     MOVE *BLANK    FLDSCR
|   C                     MOVEL'SC0001  'FLDSCR
|   C                     EXSR SATRIB
|   C* @END                                                          *
| 03-C                     END
|   C*                                                               *
|   C* @END                                                          *
| 02-C                     END
|   C*                                                               *
|   C* @END                                                          *
| 01-C                     END
|    C*                                                               *
|    C*                                                               *
|    C* Set Key values to parms passed
|    C* SVK001 = PRM001
|    C                     MOVE PRM001    SVK001
|    C* SVK002 = PRM002
|    C                     MOVE PRM002    SVK002
|    C* SVK003 = PRM003
|    C                     MOVE PRM003    SVK003
|    C*                                                               *
|    C* Set Reposition values to parms passed
|    C* PS0101 = PRM001
|    C                     MOVE PRM001    PS0101
|    C* PS0102 = PRM002
|    C                     MOVE PRM002    PS0102
|    C* PS0103 = PRM003
|    C                     MOVE PRM003    PS0103
|    C*                                                               *
|    C* Set file for list to first record in file
|    C* @SETLL D.POA001M,F.POPALF,SVK001,SVK002,SVK003
|    C*
|    C                     EXSR S005
|    C*                                                               *
|    C* Fill list Panel
|    C* @EXSUBR S01FWD
|    C                     EXSR S01FWD
| 04-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 04-C                     END
|    C*
| 05-C           DSPLY     DOWEQ'Y'
|   C*
|   C                     MOVE '1'       *IN63
|   C                     MOVE '1'       *IN65
|   C* Write sub-file messages
| 06-C           MSGFLG    IFEQ 'Y'
|   C                     MOVE '0'       *IN79
|   C                     WRITEMSGCTL
| 06-C                     END
|   C                     WRITESCR001
|   C                     EXFMTSCR001C1
|   C                     MOVEA'01'      *IN,1
|   C                     MOVEA'1'       *IN,80
|   C                     MOVE 'N'       CMDKEY
|   C*
|   C* Clear Message Subfile.
| 07-C           MSGFLG    IFEQ 'Y'
|   C                     MOVE 'C'       MSGACT
|   C                     EXSR SMSG
|   C                     WRITEMSGCTL
| 07-C                     END
|   C*
|   C* Help
|   C*
| 08-C           *INKA     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Process help requests on function key 1
|   C*                                                               *
|   C* @DSPHLP                                                       *
|   C                     MOVE *BLANK    APPSCR
|   C                     MOVEL'SC0001  'APPSCR
|   C                     EXSR SHELP
|   C                     MOVE 'Y'       CMDKEY
| 08-C                     END
|   C*
|   C* Exit
|   C*
| 09-C           *INKC     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Exit program on function key 3
|   C*                                                               *
|   C* @EXSCR SCEXIT
|   C                     ADD  1         SP
|   C                     MOVEL'SC0001  'SID,SP
|   C                     MOVE 'F'       STY,SP
|   C                     MOVEA*IN       IN01
|   C                     EXSR S004
|   C                     MOVE *BLANKS   SID,SP
|   C                     MOVE *BLANKS   STY,SP
|   C                     SUB  1         SP
| 10-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 10-C                     END
|   C                     MOVEAIN01      *IN
|   C                     MOVE '1'       *IN79
|   C                     MOVE 'Y'       CMDKEY
| 09-C                     END
|   C*
|   C* Cancel
|   C*
| 11-C           *INKL     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Exit program on function key 12
|   C*                                                               *
|   C* @EXTPGM                                                       *
|   C                     MOVE 'Y'       LRFLAG
|   C                     MOVE *BLANK    SCRNID
|   C                     MOVEL'SEND'    SCRNID
|   C                     GOTO $00199
|   C                     MOVE 'Y'       CMDKEY
| 11-C                     END
| 12-C           CMDKEY    IFEQ 'N'
|   C*
|   C* Create
|   C*
| 13-C           *INKF     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Process ADD Request on function key 6
|   C*                                                               *
|   C* MODE = 6
|   C                     Z-ADD6         MODE
|   C* @EXSCR SC0002
|   C                     ADD  1         SP
|   C                     MOVEL'SC0001  'SID,SP
|   C                     MOVE 'F'       STY,SP
|   C                     MOVEA*IN       IN01
|   C                     EXSR S002
|   C                     MOVE *BLANKS   SID,SP
|   C                     MOVE *BLANKS   STY,SP
|   C                     SUB  1         SP
| 14-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 14-C                     END
|   C                     MOVEAIN01      *IN
|   C                     MOVE '1'       *IN79
|   C* @SETLL D.POA001M,F.POPALF,SVK001,SVK002,SVK003
|   C*
|   C                     EXSR S005
|   C* @EXSUBR S01FWD
|   C                     EXSR S01FWD
| 15-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 15-C                     END
|   C                     MOVE 'Y'       CMDKEY
| 13-C                     END
|   C*
|   C* Bkwd
|   C*
| 16-C           *INKG     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* ***  Scroll information backward on function key 7
|   C* **   1. Check for any selected records.
|   C* @EXSUBR S01EDT
|   C                     EXSR S01EDT
| 17-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 17-C                     END
|   C* **   2. Fill panel.
|   C* @EXSUBR S01BKW
|   C                     EXSR S01BKW
| 18-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 18-C                     END
|   C                     MOVE 'Y'       CMDKEY
| 16-C                     END
|   C*
|   C* Fwd
|   C*
| 19-C           *INKH     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Scroll information forward on function key 8
|   C* **  1. Check for selected records.
|   C* @EXSUBR S01EDT
|   C                     EXSR S01EDT
| 20-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 20-C                     END
|   C* **  2. Fill panel.
|   C* @EXSUBR S01FWD
|   C                     EXSR S01FWD
| 21-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 21-C                     END
|   C                     MOVE 'Y'       CMDKEY
| 19-C                     END
|   C*
|   C* Bkwd
|   C*
| 22-C           *IN62     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Scroll information backwards
|   C*     1. Check for any selected records.
|   C* @EXSUBR S01EDT
|   C                     EXSR S01EDT
| 23-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 23-C                     END
|   C*     2. Fill panel.
|   C* @EXSUBR S01BKW
|   C                     EXSR S01BKW
| 24-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 24-C                     END
|   C                     MOVE 'Y'       CMDKEY
| 22-C                     END
|   C*
|   C* Fwd
|   C*
| 25-C           *IN61     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Scroll information forwards
|   C*     1. Check for selected records.
|   C* @EXSUBR S01EDT
|   C                     EXSR S01EDT
| 26-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 26-C                     END
|   C*     2. Fill Panel.
|   C* @EXSUBR S01FWD
|   C                     EXSR S01FWD
| 27-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 27-C                     END
|   C                     MOVE 'Y'       CMDKEY
| 25-C                     END
| 28-C           CMDKEY    IFEQ 'N'
|   C*---------------------------------------------------------------*
|   C* Process Post-Enter Actions.                                   *
|   C*                                                               *
|   C* *** Check for any selected records on post-enter.             *
|   C*                                                               *
|   C* Reset reposition flag and check for any                       *
|   C* selected records.                                             *
|   C* POSFLG = 0                                                    *
|   C* @EXSUBR S01EDT                                                *
|   C* *** Check for reposition                                      *
|   C* *** Check field only if not passed as parm.                   *
|   C*                                                               *
|   C* @IF (PS0103=' ')&(PRM003=' ')                                *
|   C* POSFLG = 1                                                    *
|   C* @ELSE                                                         *
|   C*                                                               *
|   C* @IF (PS0102=' ')&(PRM002=' ')                                *
|   C* POSFLG = 1                                                    *
|   C* @ELSE                                                         *
|   C*                                                               *
|   C* @IF (PS0101=' ')&(PRM001=' ')                                *
|   C* POSFLG = 1                                                    *
|   C* @ELSE                                                         *
|   C* @END                                                          *
|   C*                                                               *
|   C* @END                                                          *
|   C*                                                               *
|   C* @END                                                          *
|   C*                                                               *
|   C*                                                               *
|   C* If reposition values entered, set key                         *
|   C* values to reposition values.                                  *
|   C* @IF POSFLG=1                                                  *
|   C* SVK001 = PS0101                                               *
|   C* SVK002 = PS0102                                               *
|   C* SVK003 = PS0103                                               *
|   C* Reset/clear reposition values to parms passed                 *
|   C* PS0101 = PRM001                                               *
|   C* PS0102 = PRM002                                               *
|   C* PS0103 = PRM003                                               *
|   C* @END                                                          *
|   C*                                                               *
|   C* Refresh screen if record selected or                          *
|   C* if reposition was selected.                                   *
|   C* @IF POSFLG=1 | updflg=1                                       *
|   C*                                                               *
|   C* Set pointer to file.                                          *
|   C* @SETLL D.POA001M,F.POPALF,SVK001,SVK002,SVK003                *
|   C*                                                               *
|   C* Fill Panel.                                                   *
|   C* @EXSUBR S01FWD                                                *
|   C* @END                                                          *
|   C*---------------------------------------------------------------*
|   C* *** Check for any selected records on post-enter.
|   C*                                                               *
|   C* Reset reposition flag and check for any
|   C* selected records.
|   C* POSFLG = 0
|   C                     Z-ADD*ZERO     POSFLG
|   C* @EXSUBR S01EDT
|   C                     EXSR S01EDT
| 29-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 29-C                     END
|   C* *** Check for reposition
|   C* *** Check field only if not passed as parm.
|   C*                                                               *
|   C* @IF (PS0103=' ')&(PRM003=' ')
| 30-C           PS0103    IFNE *BLANKS
|   C           PRM003    ANDEQ*BLANKS
|   C* POSFLG = 1
|   C                     Z-ADD1         POSFLG
|   C* @ELSE                                                         *
| 30*C                     ELSE
|   C*                                                               *
|   C* @IF (PS0102=' ')&(PRM002=' ')
| 31-C           PS0102    IFNE *BLANKS
|   C           PRM002    ANDEQ*BLANKS
|   C* POSFLG = 1
|   C                     Z-ADD1         POSFLG
|   C* @ELSE                                                         *
| 31*C                     ELSE
|   C*                                                               *
|   C* @IF (PS0101=' ')&(PRM001=' ')
| 32-C           PS0101    IFNE *BLANKS
|   C           PRM001    ANDEQ*BLANKS
|   C* POSFLG = 1
|   C                     Z-ADD1         POSFLG
|   C* @ELSE                                                         *
| 32*C                     ELSE
|   C* @END                                                          *
| 32-C                     END
|   C*                                                               *
|   C* @END                                                          *
| 31-C                     END
|   C*                                                               *
|   C* @END                                                          *
| 30-C                     END
|   C*                                                               *
|   C*                                                               *
|   C* If reposition values entered, set key
|   C* values to reposition values.
|   C* @IF POSFLG=1
| 33-C           POSFLG    IFEQ 1
|   C* SVK001 = PS0101
|   C                     MOVE PS0101    SVK001
|   C* SVK002 = PS0102
|   C                     MOVE PS0102    SVK002
|   C* SVK003 = PS0103
|   C                     MOVE PS0103    SVK003
|   C* Reset/clear reposition values to parms passed
|   C* PS0101 = PRM001
|   C                     MOVE PRM001    PS0101
|   C* PS0102 = PRM002
|   C                     MOVE PRM002    PS0102
|   C* PS0103 = PRM003
|   C                     MOVE PRM003    PS0103
|   C* @END                                                          *
| 33-C                     END
|   C*                                                               *
|   C* Refresh screen if record selected or
|   C* if reposition was selected.
|   C* @IF POSFLG=1 | updflg=1
| 34-C           POSFLG    IFEQ 1
|   C           UPDFLG    OREQ 1
|   C*                                                               *
|   C* Set pointer to file.
|   C* @SETLL D.POA001M,F.POPALF,SVK001,SVK002,SVK003
|   C*
|   C                     EXSR S005
|   C*                                                               *
|   C* Fill Panel.
|   C* @EXSUBR S01FWD
|   C                     EXSR S01FWD
| 35-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00199
| 35-C                     END
|   C* @END                                                          *
| 34-C                     END
| 28-C                     END
| 12-C                     END
| 05-C                     END
03===C           $00199    ENDSR
     C/EJECT
     C*****************************************************************
     C* S002 - Detail Screen for POPALF
     C*****************************************************************
04===C           S002      BEGSR
|    C*
|    C                     MOVE 'Y'       DSPLY
|    C                     MOVEA'000000'  *IN,1
|    C                     MOVEA'11'      *IN,79
|    C*---------------------------------------------------------------*
|    C* Process Pre-Screen Actions.                                   *
|    C*                                                               *
|    C* *** Clear detail screens, setup field attributes,             *
|    C* *** and retrieve field values from files.                     *
|    C*                                                               *
|    C* Refresh exit flag at start of detail                          *
|    C* EXTSCR = 0                                                    *
|    C*                                                               *
|    C* Process Edit, Delete, and Display action choices              *
|    C* @IF MODE=2 | MODE=4 | MODE=5                                  *
|    C*                                                               *
|    C* Save Key values prior to clearing screens,                    *
|    C* otherwise, keys will be lost when screen is                   *
|    C* cleared.                                                      *
|    C* SVK001 = PA01                                                 *
|    C* SVK002 = PA02                                                 *
|    C* SVK003 = PA03                                                 *
|    C* PA01 = ' '                                                    *
|    C* PA02 = ' '                                                    *
|    C* PA04 = 0                                                      *
|    C* PA08 = ' '                                                    *
|    C* PA07 = ' '                                                    *
|    C* PA10 = ' '                                                    *
|    C* PA11 = ' '                                                    *
|    C* PA06 = 0                                                      *
|    C* PA01 = SVK001                                                 *
|    C* PA02 = SVK002                                                 *
|    C* PA03 = SVK003                                                 *
|    C*                                                               *
|    C* Revise, Delete, and Display, protect                          *
|    C* key fields from being changed.                                *
|    C*                                                               *
|    C* Get selected record for edit function.                        *
|    C* @IF MODE=2                                                    *
|    C* @GETREC D.POA001M,F.POPALF,*lock,*eq,SVK001,SVK002,SVK003     *
|    C*                                                               *
|    C* If record locked, return to previous                          *
|    C* screen and display lock message from OS/400.                  *
|    C* @IF lock(D.POA001M,F.POPALF)=*yes                             *
|    C* EXTSCR = 1                                                    *
|    C* @EXTSCR                                                       *
|    C* @END                                                          *
|    C*                                                               *
|    C* If record not found, Display message                          *
|    C* and return.                                                   *
|    C* @IF sts(D.POA001M,F.POPALF)=*no                               *
|    C* @DSPERR *none,'Record not found for Edit'                     *
|    C* EXTSCR = 1                                                    *
|    C* @EXTSCR                                                       *
|    C* @END                                                          *
|    C*                                                               *
|    C* Get secondary records if any were selected.                   *
|    C* @GETREC D.POA001M,F.MTMBPF,*eq,PA01                           *
|    C* MODDSC = 'CHANGE'                                             *
|    C* @ELSE                                                         *
|    C*                                                               *
|    C* Protect Data fields from being changed for                    *
|    C* delete and display action choices.                            *
|    C* @FLDATR POA001M.POPALF.PA04,*pr                               *
|    C* @FLDATR POA001M.POPALF.PA08,*pr                               *
|    C* @FLDATR POA001M.POPALF.PA07,*pr                               *
|    C* @FLDATR POA001M.POPALF.PA10,*pr                               *
|    C* @FLDATR POA001M.POPALF.PA11,*pr                               *
|    C* @FLDATR POA001M.POPALF.PA06,*pr                               *
|    C*                                                               *
|    C* Get selected record for delete function.                      *
|    C* @IF MODE=4                                                    *
|    C* @GETREC D.POA001M,F.POPALF,*lock,*eq,SVK001,SVK002,SVK003     *
|    C*                                                               *
|    C* If record locked, return to previous                          *
|    C* screen and display lock message from OS/400.                  *
|    C* @IF lock(D.POA001M,F.POPALF)=*yes                             *
|    C* EXTSCR = 1                                                    *
|    C* @EXTSCR                                                       *
|    C* @END                                                          *
|    C*                                                               *
|    C* If record not found, Display message                          *
|    C* and return.                                                   *
|    C* @IF sts(D.POA001M,F.POPALF)=*no                               *
|    C* @DSPERR *none,'Record not found for Delete'                   *
|    C* EXTSCR = 1                                                    *
|    C* @EXTSCR                                                       *
|    C* @END                                                          *
|    C*                                                               *
|    C* Get secondary records if any were selected.                   *
|    C* @GETREC D.POA001M,F.MTMBPF,*eq,PA01                           *
|    C* MODDSC = 'DELETE'                                             *
|    C* @ELSE                                                         *
|    C*                                                               *
|    C* Get selected record for display function.                     *
|    C* @GETREC D.POA001M,F.POPALF,*eq,SVK001,SVK002,SVK003           *
|    C*                                                               *
|    C* If record not found, Display message                          *
|    C* and return.                                                   *
|    C* @IF sts(D.POA001M,F.POPALF)=*no                               *
|    C* @DSPERR *none,'Record not found for Display'                  *
|    C* EXTSCR = 1                                                    *
|    C* @EXTSCR                                                       *
|    C* @END                                                          *
|    C*                                                               *
|    C* Get secondary records if any were selected.                   *
|    C* @GETREC D.POA001M,F.MTMBPF,*eq,PA01                           *
|    C* MODDSC = 'DISPLAY'                                            *
|    C* @END                                                          *
|    C* @END                                                          *
|    C* @ELSE                                                         *
|    C*                                                               *
|    C*                                                               *
|    C* Clear screens for Add function.                               *
|    C* PA01 = ' '                                                    *
|    C* PA02 = ' '                                                    *
|    C* PA04 = 0                                                      *
|    C* PA08 = ' '                                                    *
|    C* PA07 = ' '                                                    *
|    C* PA10 = ' '                                                    *
|    C* PA11 = ' '                                                    *
|    C* PA06 = 0                                                      *
|    C* MODDSC = 'ADD'                                                *
|    C* @END                                                          *
|    C* F12FLG = 0                                                    *
|    C*---------------------------------------------------------------*
|    C* *** Clear detail screens, setup field attributes,
|    C* *** and retrieve field values from files.
|    C*                                                               *
|    C* Refresh exit flag at start of detail
|    C* EXTSCR = 0
|    C                     Z-ADD*ZERO     EXTSCR
|    C*                                                               *
|    C* Process Edit, Delete, and Display action choices
|    C* @IF MODE=2 | MODE=4 | MODE=5
| 01-C           MODE      IFEQ 2
|   C           MODE      OREQ 4
|   C           MODE      OREQ 5
|   C*                                                               *
|   C* Save Key values prior to clearing screens,
|   C* otherwise, keys will be lost when screen is
|   C* cleared.
|   C* SVK001 = PA01
|   C                     MOVE XA01      SVK001
|   C* SVK002 = PA02
|   C                     MOVE XA02      SVK002
|   C* SVK003 = PA03
|   C                     MOVE XA03      SVK003
|   C* PA01 = ' '
|   C                     MOVEL*BLANKS   XA01
|   C* PA02 = ' '
|   C                     MOVEL*BLANKS   XA02
|   C* PA04 = 0
B2000C                     Z-ADD*ZERO     XA04
|   C* PA08 = ' '
|   C                     MOVEL*BLANKS   XA08
|   C* PA07 = ' '
|   C                     MOVEL*BLANKS   XA07
|   C* PA10 = ' '
|   C                     MOVEL*BLANKS   XA10
|   C* PA11 = ' '
|   C                     MOVEL*BLANKS   XA11
|   C* PA06 = 0
B2000C                     Z-ADD*ZERO     XA06
|   C* PA01 = SVK001
|   C                     MOVE SVK001    XA01
|   C* PA02 = SVK002
|   C                     MOVE SVK002    XA02
|   C* PA03 = SVK003
|   C                     MOVE SVK003    XA03
|   C*                                                               *
|   C* Revise, Delete, and Display, protect
|   C* key fields from being changed.
|   C*                                                               *
|   C* Get selected record for edit function.
|   C* @IF MODE=2
| 02-C           MODE      IFEQ 2
|   C* @GETREC D.POA001M,F.POPALF,*lock,*eq,SVK001,SVK002,SVK003
|   C*
|   C                     EXSR S006
|   C*                                                               *
|   C* If record locked, return to previous
|   C* screen and display lock message from OS/400.
|   C* @IF lock(D.POA001M,F.POPALF)=*yes
|   C*  Lock status on file
|   C                     EXSR SLOCK
| 03-C           LCK01     IFEQ *ZERO
|   C                     Z-ADD1         RNM006
| 03*C                     ELSE
|   C                     Z-ADD0         RNM006
| 03-C                     END
| 04-C           RNM006    IFEQ XYES
|   C                     Z-ADD1         RNM006
| 04*C                     ELSE
|   C                     Z-ADD0         RNM006
| 04-C                     END
| 05-C           RNM006    IFEQ 1
|   C* EXTSCR = 1
|   C                     Z-ADD1         EXTSCR
|   C* @EXTSCR                                                       *
|   C                     GOTO $00299
|   C* @END                                                          *
| 05-C                     END
|   C*                                                               *
|   C* If record not found, Display message
|   C* and return.
|   C* @IF sts(D.POA001M,F.POPALF)=*no
|   C*  Status of last file I/O
| 06-C           STS01     IFEQ *ZERO
|   C                     Z-ADD1         RNM006
| 06*C                     ELSE
|   C                     Z-ADD0         RNM006
| 06-C                     END
| 07-C           RNM006    IFEQ XNO
|   C                     Z-ADD1         RNM006
| 07*C                     ELSE
|   C                     Z-ADD0         RNM006
| 07-C                     END
| 08-C           RNM006    IFEQ 1
|   C* @DSPERR *none,'Record not found for Edit'
|   C                     MOVELA1,1      MSGDTA
|   C                     MOVE 'A'       MSGACT
|   C                     EXSR SMSG
|   C* EXTSCR = 1
|   C                     Z-ADD1         EXTSCR
|   C* @EXTSCR                                                       *
|   C                     GOTO $00299
|   C* @END                                                          *
| 08-C                     END
|   C*                                                               *
|   C* Get secondary records if any were selected.
|   C* @GETREC D.POA001M,F.MTMBPF,*eq,PA01
|   C*
|   C                     EXSR S007
|   C* MODDSC = 'CHANGE'
|   C                     MOVE *BLANKS   MODDSC
|   C                     MOVEL'CHANGE'  MODDSC
|   C* @ELSE                                                         *
| 02*C                     ELSE
|   C*                                                               *
|   C* Protect Data fields from being changed for
|   C* delete and display action choices.
|   C* @FLDATR POA001M.POPALF.PA04,*pr
|   C                     MOVE 'X'       #PR
|   C                     MOVEL'XA04    'FLDNAM
|   C                     Z-ADD*ZERO     FLDINX
|   C                     MOVE *BLANK    FLDSCR
|   C                     MOVEL'SC0002  'FLDSCR
|   C                     EXSR SATRIB
|   C* @FLDATR POA001M.POPALF.PA08,*pr
|   C                     MOVE 'X'       #PR
|   C                     MOVEL'XA08    'FLDNAM
|   C                     Z-ADD*ZERO     FLDINX
|   C                     MOVE *BLANK    FLDSCR
|   C                     MOVEL'SC0002  'FLDSCR
|   C                     EXSR SATRIB
|   C* @FLDATR POA001M.POPALF.PA07,*pr
|   C                     MOVE 'X'       #PR
|   C                     MOVEL'XA07    'FLDNAM
|   C                     Z-ADD*ZERO     FLDINX
|   C                     MOVE *BLANK    FLDSCR
|   C                     MOVEL'SC0002  'FLDSCR
|   C                     EXSR SATRIB
|   C* @FLDATR POA001M.POPALF.PA10,*pr
|   C                     MOVE 'X'       #PR
|   C                     MOVEL'XA10    'FLDNAM
|   C                     Z-ADD*ZERO     FLDINX
|   C                     MOVE *BLANK    FLDSCR
|   C                     MOVEL'SC0002  'FLDSCR
|   C                     EXSR SATRIB
|   C* @FLDATR POA001M.POPALF.PA11,*pr
|   C                     MOVE 'X'       #PR
|   C                     MOVEL'XA11    'FLDNAM
|   C                     Z-ADD*ZERO     FLDINX
|   C                     MOVE *BLANK    FLDSCR
|   C                     MOVEL'SC0002  'FLDSCR
|   C                     EXSR SATRIB
|   C* @FLDATR POA001M.POPALF.PA06,*pr
|   C                     MOVE 'X'       #PR
|   C                     MOVEL'XA06    'FLDNAM
|   C                     Z-ADD*ZERO     FLDINX
|   C                     MOVE *BLANK    FLDSCR
|   C                     MOVEL'SC0002  'FLDSCR
|   C                     EXSR SATRIB
|   C*                                                               *
|   C* Get selected record for delete function.
|   C* @IF MODE=4
| 09-C           MODE      IFEQ 4
|   C* @GETREC D.POA001M,F.POPALF,*lock,*eq,SVK001,SVK002,SVK003
|   C*
|   C                     EXSR S006
|   C*                                                               *
|   C* If record locked, return to previous
|   C* screen and display lock message from OS/400.
|   C* @IF lock(D.POA001M,F.POPALF)=*yes
|   C*  Lock status on file
|   C                     EXSR SLOCK
| 10-C           LCK01     IFEQ *ZERO
|   C                     Z-ADD1         RNM007
| 10*C                     ELSE
|   C                     Z-ADD0         RNM007
| 10-C                     END
| 11-C           RNM007    IFEQ XYES
|   C                     Z-ADD1         RNM007
| 11*C                     ELSE
|   C                     Z-ADD0         RNM007
| 11-C                     END
| 12-C           RNM007    IFEQ 1
|   C* EXTSCR = 1
|   C                     Z-ADD1         EXTSCR
|   C* @EXTSCR                                                       *
|   C                     GOTO $00299
|   C* @END                                                          *
| 12-C                     END
|   C*                                                               *
|   C* If record not found, Display message
|   C* and return.
|   C* @IF sts(D.POA001M,F.POPALF)=*no
|   C*  Status of last file I/O
| 13-C           STS01     IFEQ *ZERO
|   C                     Z-ADD1         RNM007
| 13*C                     ELSE
|   C                     Z-ADD0         RNM007
| 13-C                     END
| 14-C           RNM007    IFEQ XNO
|   C                     Z-ADD1         RNM007
| 14*C                     ELSE
|   C                     Z-ADD0         RNM007
| 14-C                     END
| 15-C           RNM007    IFEQ 1
|   C* @DSPERR *none,'Record not found for Delete'
|   C                     MOVELA1,2      MSGDTA
|   C                     MOVE 'A'       MSGACT
|   C                     EXSR SMSG
|   C* EXTSCR = 1
|   C                     Z-ADD1         EXTSCR
|   C* @EXTSCR                                                       *
|   C                     GOTO $00299
|   C* @END                                                          *
| 15-C                     END
|   C*                                                               *
|   C* Get secondary records if any were selected.
|   C* @GETREC D.POA001M,F.MTMBPF,*eq,PA01
|   C*
|   C                     EXSR S007
|   C* MODDSC = 'DELETE'
|   C                     MOVE *BLANKS   MODDSC
|   C                     MOVEL'DELETE'  MODDSC
|   C* @ELSE                                                         *
| 09*C                     ELSE
|   C*                                                               *
|   C* Get selected record for display function.
|   C* @GETREC D.POA001M,F.POPALF,*eq,SVK001,SVK002,SVK003
|   C*
|   C                     EXSR S008
|   C*                                                               *
|   C* If record not found, Display message
|   C* and return.
|   C* @IF sts(D.POA001M,F.POPALF)=*no
|   C*  Status of last file I/O
| 16-C           STS01     IFEQ *ZERO
|   C                     Z-ADD1         RNM008
| 16*C                     ELSE
|   C                     Z-ADD0         RNM008
| 16-C                     END
| 17-C           RNM008    IFEQ XNO
|   C                     Z-ADD1         RNM008
| 17*C                     ELSE
|   C                     Z-ADD0         RNM008
| 17-C                     END
| 18-C           RNM008    IFEQ 1
|   C* @DSPERR *none,'Record not found for Display'
|   C                     MOVELA1,3      MSGDTA
|   C                     MOVE 'A'       MSGACT
|   C                     EXSR SMSG
|   C* EXTSCR = 1
|   C                     Z-ADD1         EXTSCR
|   C* @EXTSCR                                                       *
|   C                     GOTO $00299
|   C* @END                                                          *
| 18-C                     END
|   C*                                                               *
|   C* Get secondary records if any were selected.
|   C* @GETREC D.POA001M,F.MTMBPF,*eq,PA01
|   C*
|   C                     EXSR S007
|   C* MODDSC = 'DISPLAY'
|   C                     MOVE *BLANKS   MODDSC
|   C                     MOVEL'DISPLAY' MODDSC
|   C* @END                                                          *
| 09-C                     END
|   C* @END                                                          *
| 02-C                     END
|   C* @ELSE                                                         *
| 01*C                     ELSE
|   C*                                                               *
|   C*                                                               *
|   C* Clear screens for Add function.
|   C* PA01 = ' '
|   C                     MOVEL*BLANKS   XA01
|   C* PA02 = ' '
|   C                     MOVEL*BLANKS   XA02
|   C* PA04 = 0
B2000C                     Z-ADD*ZERO     XA04
|   C* PA08 = ' '
|   C                     MOVEL*BLANKS   XA08
|   C* PA07 = ' '
|   C                     MOVEL*BLANKS   XA07
|   C* PA10 = ' '
|   C                     MOVEL*BLANKS   XA10
|   C* PA11 = ' '
|   C                     MOVEL*BLANKS   XA11
|   C* PA06 = 0
B2000C                     Z-ADD*ZERO     XA06
|   C* MODDSC = 'ADD'
|   C                     MOVE *BLANKS   MODDSC
|   C                     MOVEL'ADD'     MODDSC
|   C* @END                                                          *
| 01-C                     END
|    C* F12FLG = 0
|    C                     Z-ADD*ZERO     F12FLG
|    C*
| 19-C           DSPLY     DOWEQ'Y'
|   C*
|   C* Write sub-file messages
| 20-C           MSGFLG    IFEQ 'Y'
|   C                     MOVE '0'       *IN79
|   C                     WRITEMSGCTL
| 20-C                     END
|   C                     EXFMTSCR002
|   C                     MOVEA'1'       *IN,80
|   C                     MOVE 'N'       CMDKEY
|   C*
|   C* Clear Message Subfile.
| 21-C           MSGFLG    IFEQ 'Y'
|   C                     MOVE 'C'       MSGACT
|   C                     EXSR SMSG
|   C                     WRITEMSGCTL
| 21-C                     END
|   C*
|   C* Help
|   C*
| 22-C           *INKA     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Process help request on function key 1
|   C*                                                               *
|   C* @DSPHLP                                                       *
|   C                     MOVE *BLANK    APPSCR
|   C                     MOVEL'SC0002  'APPSCR
|   C                     EXSR SHELP
|   C                     MOVE 'Y'       CMDKEY
| 22-C                     END
|   C*
|   C* Cancel
|   C*
| 23-C           *INKL     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Return to list panel on function key 12
|   C* Set exit flag to signal previous screen
|   C* EXTSCR = 1
|   C                     Z-ADD1         EXTSCR
|   C*                                                               *
|   C* Release record if edit or delete functions
|   C* @IF mode=2 | mode=4
| 24-C           MODE      IFEQ 2
|   C           MODE      OREQ 4
|   C* @RLSREC D.POA001M,F.POPALF
|   C*
|   C                     Z-ADD4         WFILE#           SET FILE#
| 25-C           *HIVAL    IFEQ STS04
|   C                     EXCPTEXC001                     RLS LCK POPALFX
| 25-C                     END
|   C* @END                                                          *
| 24-C                     END
|   C*                                                               *
|   C* @EXTSCR                                                       *
|   C                     GOTO $00299
|   C                     MOVE 'Y'       CMDKEY
| 23-C                     END
|   C*
|   C* Process
|   C*
| 26-C           *INKN     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Perform updates to file on function key 14
|   C*                                                               *
|   C* ** Revise
|   C* @IF MODE=2
| 27-C           MODE      IFEQ 2
|   C* @UPDATE D.POA001M,F.POPALF
|   C*
|   C                     EXSR S009
|   C* @ELSE                                                         *
| 27*C                     ELSE
|   C*                                                               *
|   C* ** Delete
|   C* @IF MODE=4
| 28-C           MODE      IFEQ 4
|   C* @DELETE D.POA001M,F.POPALF
|   C*
|   C                     MOVE 'N'       SW0001
|   C                     EXSR S010
|   C* @ELSE                                                         *
| 28*C                     ELSE
|   C*                                                               *
|   C* ** Create
|   C* @IF MODE=6
| 29-C           MODE      IFEQ 6
|   C* @WRITE D.POA001M,F.POPALF
|   C*
|   C                     EXSR S011
|   C* ** Set keys for first record to display.
|   C* SVK001 = PA01
|   C                     MOVE XA01      SVK001
|   C* SVK002 = PA02
|   C                     MOVE XA02      SVK002
|   C* SVK003 = PA03
|   C                     MOVE XA03      SVK003
|   C* @END                                                          *
| 29-C                     END
|   C* @END                                                          *
| 28-C                     END
|   C* @END                                                          *
| 27-C                     END
|   C*                                                               *
|   C* @IF STS(D.POA001M,F.POPALF)=*YES
|   C*  Status of last file I/O
| 30-C           STS01     IFEQ *ZERO
|   C                     Z-ADD1         RNM016
| 30*C                     ELSE
|   C                     Z-ADD0         RNM016
| 30-C                     END
| 31-C           RNM016    IFEQ XYES
|   C                     Z-ADD1         RNM016
| 31*C                     ELSE
|   C                     Z-ADD0         RNM016
| 31-C                     END
| 32-C           RNM016    IFEQ 1
|   C* @EXTSCR                                                       *
|   C                     GOTO $00299
|   C* @END                                                          *
| 32-C                     END
|   C                     MOVE 'Y'       CMDKEY
| 26-C                     END
| 19-C                     END
04===C           $00299    ENDSR
     C/EJECT
     C*****************************************************************
     C* S003 - List Screen for POPAPF
     C*****************************************************************
05===C           S003      BEGSR
|    C*
|    C                     MOVE 'Y'       DSPLY
|    C                     MOVEA'01'      *IN,1
|    C                     MOVEA'0'       *IN,64
|    C                     MOVEA'11'      *IN,79
|    C*---------------------------------------------------------------*
|    C* Process Pre-Screen Actions.                                   *
|    C*                                                               *
|    C*                                                               *
|    C* Reset Key values, start at beginning of file                  *
|    C* SVK006 = PS0301                                               *
|    C*                                                               *
|    C* Set Keys to values from header file.                          *
|    C* PA01 = PA01                                                   *
|    C* PA02 = PA02                                                   *
|    C* SVK004 = PA01                                                 *
|    C* SVK005 = PA02                                                 *
|    C*                                                               *
|    C* F12FLG = 0                                                    *
|    C* ***  Start display on                                         *
|    C* ***  first record in file.                                    *
|    C* @SETLL D.POA001M,F.POPAPF,SVK004,SVK005,SVK006                *
|    C*                                                               *
|    C* Fill List panel.                                              *
|    C* @EXSUBR S03FWD                                                *
|    C*---------------------------------------------------------------*
|    C*                                                               *
|    C* Reset Key values, start at beginning of file
|    C* SVK006 = PS0301
|    C                     MOVE PS0301    SVK006
|    C*                                                               *
|    C* Set Keys to values from header file.
|    C* PA01 = PA01
|    C                     MOVE XA01      XA01
|    C* PA02 = PA02
|    C                     MOVE XA02      XA02
|    C* SVK004 = PA01
|    C                     MOVE XA01      SVK004
|    C* SVK005 = PA02
|    C                     MOVE XA02      SVK005
|    C*                                                               *
|    C* F12FLG = 0
|    C                     Z-ADD*ZERO     F12FLG
|    C* ***  Start display on
|    C* ***  first record in file.
|    C* @SETLL D.POA001M,F.POPAPF,SVK004,SVK005,SVK006
|    C*
|    C                     EXSR S012
|    C*                                                               *
|    C* Fill List panel.
|    C* @EXSUBR S03FWD
|    C                     EXSR S03FWD
| 01-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00399
| 01-C                     END
|    C*
| 02-C           DSPLY     DOWEQ'Y'
|   C*
|   C                     MOVE '1'       *IN63
|   C                     MOVE '1'       *IN65
|   C* Write sub-file messages
| 03-C           MSGFLG    IFEQ 'Y'
|   C                     MOVE '0'       *IN79
|   C                     WRITEMSGCTL
| 03-C                     END
|   C                     WRITESCR003
|   C                     EXFMTSCR003C1
|   C                     MOVEA'01'      *IN,1
|   C                     MOVEA'1'       *IN,80
|   C                     MOVE 'N'       CMDKEY
|   C*
|   C* Clear Message Subfile.
| 04-C           MSGFLG    IFEQ 'Y'
|   C                     MOVE 'C'       MSGACT
|   C                     EXSR SMSG
|   C                     WRITEMSGCTL
| 04-C                     END
|   C*
|   C* Help
|   C*
| 05-C           *INKA     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Process help requests on function key 1
|   C*                                                               *
|   C* @DSPHLP                                                       *
|   C                     MOVE *BLANK    APPSCR
|   C                     MOVEL'SC0003  'APPSCR
|   C                     EXSR SHELP
|   C                     MOVE 'Y'       CMDKEY
| 05-C                     END
|   C*
|   C* Exit
|   C*
| 06-C           *INKC     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Exit program on function key 3
|   C*                                                               *
|   C* @EXSCR SCEXIT
|   C                     ADD  1         SP
|   C                     MOVEL'SC0003  'SID,SP
|   C                     MOVE 'F'       STY,SP
|   C                     MOVEA*IN       IN02
|   C                     EXSR S004
|   C                     MOVE *BLANKS   SID,SP
|   C                     MOVE *BLANKS   STY,SP
|   C                     SUB  1         SP
| 07-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00399
| 07-C                     END
|   C                     MOVEAIN02      *IN
|   C                     MOVE '1'       *IN79
|   C                     MOVE 'Y'       CMDKEY
| 06-C                     END
|   C*
|   C* Cancel
|   C*
| 08-C           *INKL     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Return to previous screen on
|   C* *** on function key 12
|   C* @EXTSCR                                                       *
|   C                     GOTO $00399
|   C                     MOVE 'Y'       CMDKEY
| 08-C                     END
| 09-C           CMDKEY    IFEQ 'N'
|   C*
|   C* Bkwd
|   C*
| 10-C           *INKG     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* ***  Scroll information backward on function key 7
|   C* **   1. Check for any selected records.
|   C* @EXSUBR S03EDT
|   C                     EXSR S03EDT
| 11-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00399
| 11-C                     END
|   C* **   2. Fill panel.
|   C* @EXSUBR S03BKW
|   C                     EXSR S03BKW
| 12-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00399
| 12-C                     END
|   C                     MOVE 'Y'       CMDKEY
| 10-C                     END
|   C*
|   C* Fwd
|   C*
| 13-C           *INKH     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Scroll information forward on function key 8
|   C* **  1. Check for selected records.
|   C* @EXSUBR S03EDT
|   C                     EXSR S03EDT
| 14-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00399
| 14-C                     END
|   C* **  2. Fill panel.
|   C* @EXSUBR S03FWD
|   C                     EXSR S03FWD
| 15-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00399
| 15-C                     END
|   C                     MOVE 'Y'       CMDKEY
| 13-C                     END
|   C*
|   C* Bkwd
|   C*
| 16-C           *IN62     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Scroll information backwards
|   C*     1. Check for any selected records.
|   C* @EXSUBR S03EDT
|   C                     EXSR S03EDT
| 17-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00399
| 17-C                     END
|   C*     2. Fill panel.
|   C* @EXSUBR S03BKW
|   C                     EXSR S03BKW
| 18-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00399
| 18-C                     END
|   C                     MOVE 'Y'       CMDKEY
| 16-C                     END
|   C*
|   C* Fwd
|   C*
| 19-C           *IN61     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Scroll information forwards
|   C*     1. Check for selected records.
|   C* @EXSUBR S03EDT
|   C                     EXSR S03EDT
| 20-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00399
| 20-C                     END
|   C*     2. Fill Panel.
|   C* @EXSUBR S03FWD
|   C                     EXSR S03FWD
| 21-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00399
| 21-C                     END
|   C                     MOVE 'Y'       CMDKEY
| 19-C                     END
| 22-C           CMDKEY    IFEQ 'N'
|   C*---------------------------------------------------------------*
|   C* Process Post-Enter Actions.                                   *
|   C*                                                               *
|   C* *** Check for any selected records on post-enter.             *
|   C*                                                               *
|   C* Reset reposition flag and check for any                       *
|   C* selected records.                                             *
|   C* POSFLG = 0                                                    *
|   C* @EXSUBR S03EDT                                                *
|   C* *** Check for reposition                                      *
|   C*                                                               *
|   C* @IF PS0301=' '                                               *
|   C* POSFLG = 1                                                    *
|   C* @ELSE                                                         *
|   C* @END                                                          *
|   C*                                                               *
|   C*                                                               *
|   C* If reposition values entered, set key                         *
|   C* values to reposition values.                                  *
|   C* @IF POSFLG=1                                                  *
|   C* SVK006 = PS0301                                               *
|   C* PS0301 = ' '                                                  *
|   C* @END                                                          *
|   C*                                                               *
|   C* Refresh screen if record selected or                          *
|   C* if reposition was selected.                                   *
|   C* @IF POSFLG=1 | updflg=1                                       *
|   C* @SETLL D.POA001M,F.POPAPF,SVK004,SVK005,SVK006                *
|   C* @EXSUBR S03FWD                                                *
|   C* @END                                                          *
|   C*---------------------------------------------------------------*
|   C* *** Check for any selected records on post-enter.
|   C*                                                               *
|   C* Reset reposition flag and check for any
|   C* selected records.
|   C* POSFLG = 0
|   C                     Z-ADD*ZERO     POSFLG
|   C* @EXSUBR S03EDT
|   C                     EXSR S03EDT
| 23-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00399
| 23-C                     END
|   C* *** Check for reposition
|   C*                                                               *
|   C* @IF PS0301=' '
| 24-C           PS0301    IFNE *BLANKS
|   C* POSFLG = 1
|   C                     Z-ADD1         POSFLG
|   C* @ELSE                                                         *
| 24*C                     ELSE
|   C* @END                                                          *
| 24-C                     END
|   C*                                                               *
|   C*                                                               *
|   C* If reposition values entered, set key
|   C* values to reposition values.
|   C* @IF POSFLG=1
| 25-C           POSFLG    IFEQ 1
|   C* SVK006 = PS0301
|   C                     MOVE PS0301    SVK006
|   C* PS0301 = ' '
|   C                     MOVEL*BLANKS   PS0301
|   C* @END                                                          *
| 25-C                     END
|   C*                                                               *
|   C* Refresh screen if record selected or
|   C* if reposition was selected.
|   C* @IF POSFLG=1 | updflg=1
| 26-C           POSFLG    IFEQ 1
|   C           UPDFLG    OREQ 1
|   C* @SETLL D.POA001M,F.POPAPF,SVK004,SVK005,SVK006
|   C*
|   C                     EXSR S012
|   C* @EXSUBR S03FWD
|   C                     EXSR S03FWD
| 27-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $00399
| 27-C                     END
|   C* @END                                                          *
| 26-C                     END
| 22-C                     END
| 09-C                     END
| 02-C                     END
05===C           $00399    ENDSR
     C/EJECT
     C*****************************************************************
     C* S004 - Exit window panel
     C*****************************************************************
06===C           S004      BEGSR
|    C*
|    C                     MOVE 'Y'       DSPLY
|    C                     MOVEA'01'      *IN,1
|    C                     MOVEA'11'      *IN,79
|    C*
| 01-C           DSPLY     DOWEQ'Y'
|   C*
|   C* Write sub-file messages
| 02-C           MSGFLG    IFEQ 'Y'
|   C                     MOVE '0'       *IN79
|   C                     WRITEMSGCTL
| 02-C                     END
|   C                     EXFMTSCR004
|   C                     MOVE 'N'       CMDKEY
|   C*
|   C* Clear Message Subfile.
| 03-C           MSGFLG    IFEQ 'Y'
|   C                     MOVE 'C'       MSGACT
|   C                     EXSR SMSG
|   C                     WRITEMSGCTL
| 03-C                     END
|   C*
|   C* Help
|   C*
| 04-C           *INKA     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** display help
|   C*                                                               *
|   C* @DSPHLP                                                       *
|   C                     MOVE *BLANK    APPSCR
|   C                     MOVEL'SCEXIT  'APPSCR
|   C                     EXSR SHELP
|   C                     MOVE 'Y'       CMDKEY
| 04-C                     END
|   C*
|   C* Cancel
|   C*
| 05-C           *INKL     IFEQ '1'
|   C           CMDKEY    ANDEQ'N'
|   C* *** Resume
|   C*                                                               *
|   C* @EXTSCR                                                       *
|   C                     GOTO $00499
|   C                     MOVE 'Y'       CMDKEY
| 05-C                     END
| 06-C           CMDKEY    IFEQ 'N'
|   C*---------------------------------------------------------------*
|   C* Process Post-Enter Actions.                                   *
|   C*                                                               *
|   C* *** Edit for correct option                                   *
|   C*                                                               *
|   C* @IF exflag=1                                                  *
|   C* @EXTPGM                                                       *
|   C* @ELSE                                                         *
|   C* @IF exflag=2                                                  *
|   C* SIGNOFF                                                       *
|   C* @ELSE                                                         *
|   C* @IF exflag=3                                                  *
|   C* @EXTSCR                                                       *
|   C* @END                                                          *
|   C* @END                                                          *
|   C* @END                                                          *
|   C*---------------------------------------------------------------*
|   C* *** Edit for correct option
|   C*                                                               *
|   C* @IF exflag=1
| 07-C           EXFLAG    IFEQ 1
|   C* @EXTPGM                                                       *
|   C                     MOVE 'Y'       LRFLAG
|   C                     MOVE *BLANK    SCRNID
|   C                     MOVEL'SEND'    SCRNID
|   C                     GOTO $00499
|   C* @ELSE                                                         *
| 07*C                     ELSE
|   C* @IF exflag=2
| 08-C           EXFLAG    IFEQ 2
|   C* SIGNOFF                                                       *
|   C                     MOVEA*BLANKS   CST
|   C                     MOVEACMD,1     CST
|   C                     MOVEA*BLANK    CST,81
|   C                     EXSR SCMD
|   C* @ELSE                                                         *
| 08*C                     ELSE
|   C* @IF exflag=3
| 09-C           EXFLAG    IFEQ 3
|   C* @EXTSCR                                                       *
|   C                     GOTO $00499
|   C* @END                                                          *
| 09-C                     END
|   C* @END                                                          *
| 08-C                     END
|   C* @END                                                          *
| 07-C                     END
| 06-C                     END
| 01-C                     END
06===C           $00499    ENDSR
     C/EJECT
     C*****************************************************************
     C* SREDSP -  Redisplay Windows within stack.
     C*****************************************************************
07===C           SREDSP    BEGSR
|    C*
|    C                     Z-ADDSP        CT
| 01-C           CT        DOWGT1
|   C           STY,CT    ANDNE'F'
|   C                     SUB  1         CT
| 01-C                     END
|    C*
|    C*  Redisplay Windows within stack.
|    C*
| 02-C           CT        DOWLESP
|   C           CT        ANDGT0
|   C*
| 03-C           SID,CT    IFEQ 'SC0001'
|   C                     MOVEAIN01      *IN
|   C                     MOVE '1'       *IN79
|   C                     MOVE '1'       *IN99
|   C                     WRITESCR001
|   C                     WRITESCR001C1
| 03*C                     ELSE
| 04-C           SID,CT    IFEQ 'SC0002'
|   C                     MOVE '1'       *IN79
|   C                     MOVE '1'       *IN99
|   C                     WRITESCR002
| 04*C                     ELSE
| 05-C           SID,CT    IFEQ 'SC0003'
|   C                     MOVEAIN02      *IN
|   C                     MOVE '1'       *IN79
|   C                     MOVE '1'       *IN99
|   C                     WRITESCR003
|   C                     WRITESCR003C1
| 05*C                     ELSE
| 06-C           SID,CT    IFEQ 'SCEXIT'
|   C                     MOVE '1'       *IN79
|   C                     MOVE '1'       *IN99
|   C                     WRITESCR004
| 06-C                     END
| 05-C                     END
| 04-C                     END
| 03-C                     END
|   C*
|   C                     ADD  1         CT
| 02-C                     END
|    C*
07===C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* S01BKW - SCRN SUB
     C*****************************************************************
08===C           S01BKW    BEGSR
|    C*
|    C*---------------------------------------------------------------*
|    C*                                                               *
|    C* ***  Scroll information backward                              *
|    C*                                                               *
|    C* C01 = 0                                                       *
|    C* ** Clear hidden key arrays used for record                    *
|    C* ** retrieval.                                                 *
|    C* A001 = ' '                                                    *
|    C* A002 = ' '                                                    *
|    C* A003 = ' '                                                    *
|    C* @IF PRMCNT = 000                                              *
|    C* @GETBLK D.POA001M,F.POPALF,F.MTMBPF,*PV                       *
|    C* C01 = C01+1                                                   *
|    C* ** Save key values in key arrays.                             *
|    C* A001{C01} = PA01                                              *
|    C* A002{C01} = PA02                                              *
|    C* A003{C01} = PA03                                              *
|    C* ** Fill any possible work fields in list                      *
|    C* ** panel with secondary file fields.                          *
|    C* @IF STS(D.POA001M,F.MTMBPF)=*YES                              *
|    C* FL0002 = MB03                                                 *
|    C* @END                                                          *
|    C*                                                               *
|    C* @ENDBLK                                                       *
|    C* @END                                                          *
|    C*                                                               *
|    C*---------------------------------------------------------------*
|    C* ***  Scroll information backward
|    C*                                                               *
|    C* C01 = 0
|    C                     Z-ADD*ZERO     Z1
|    C* ** Clear hidden key arrays used for record
|    C* ** retrieval.
|    C* A001 = ' '
|    C                     MOVEA*BLANKS   A01
|    C* A002 = ' '
|    C                     MOVEA*BLANKS   A02
|    C* A003 = ' '
|    C                     MOVEA*BLANKS   A03
|    C* @IF PRMCNT = 000
| 01-C           PRMCNT    IFEQ *ZERO
|   C* @GETBLK D.POA001M,F.POPALF,F.MTMBPF,*PV
|   C*
|   C                     EXSR S013
|   C*
|   C*
|   C*          ---------------------------------------------------------------
|   C*          | Initialize Loop
|   C*          ---------------------------------------------------------------
|   C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
|   C                     Z-ADD11        WLCNTR           INIT LOOP CNTR
|   C                     EXSR S015                       INZ SFL
|   C*          ---------------------------------------------------------------
|   C*          | Setup Loop To Retrieve Record
|   C*          ---------------------------------------------------------------
| 02-C           SWRD01    DOUNE'Y'                        RD.SW.POPALF    MTMBP
|   C           WCNTR     ORGE WLCNTR
|   C                     Z-ADD1         WFILE#           SET FILE#
|   C                     READ POPALF                 9190
| 03-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     Z-ADD*ZERO     HRC01            ZERO HIDDEN RRN
| 03*C                     ELSE
|   C                     MOVE 'Y'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 03-C                     END
|   C*
| 04-C           SWRD01    IFEQ 'Y'                        RD.SW.POPALF    MTMBP
|   C                     Z-ADD2         WFILE#           SET FILE#
|   C                     MOVEL*BLANK    KA0101           供應商代號
|   C                     MOVELPA01      KA0101
|   C           K0002     CHAINMTMBPF               9091
| 05-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD02           RD.SW.MTMBPF    POPAP
| 05*C                     ELSE
|   C                     MOVE 'Y'       SWRD02           RD.SW.MTMBPF    POPAP
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 05-C                     END
|   C*
|   C                     ADD  1         WCNTR            INCREMENT CNTR
|   C                     Z-ADDWCNTR     WRRN01
|   C           RRN1      CHAINSCR001S1             9091
|   C                     Z-ADD1         WFILE#           SET FILE#
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
|   C                     Z-ADD2         WFILE#           SET FILE#
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
|   C*
|   C* C01 = C01+1
|   C                     ADD  1         Z1
|   C* ** Save key values in key arrays.
|   C* A001{C01} = PA01
|   C                     MOVE XA01      A01,Z1
|   C* A002{C01} = PA02
|   C                     MOVE XA02      A02,Z1
|   C* A003{C01} = PA03
|   C                     MOVE XA03      A03,Z1
|   C* ** Fill any possible work fields in list
|   C* ** panel with secondary file fields.
|   C* @IF STS(D.POA001M,F.MTMBPF)=*YES
|   C*  Status of last file I/O
| 06-C           STS02     IFEQ *ZERO
|   C                     Z-ADD1         RNM024
| 06*C                     ELSE
|   C                     Z-ADD0         RNM024
| 06-C                     END
| 07-C           RNM024    IFEQ XYES
|   C                     Z-ADD1         RNM024
| 07*C                     ELSE
|   C                     Z-ADD0         RNM024
| 07-C                     END
| 08-C           RNM024    IFEQ 1
|   C* FL0002 = MB03
|   C                     MOVE XB03      FL0002
|   C* @END                                                          *
| 08-C                     END
|   C*                                                               *
|   C* @ENDBLK                                                       *
|   C                     UPDATSCR001S1               90
|   C                     ADD  1         RRN1             INCREMENT RRN
| 04-C                     END
| 02-C                     END
| 09-C           WCNTR     IFGT *ZERO
|   C                     SUB  1         RRN1
| 09-C                     END
|   C                     EXSR S016                       CHK EOF
|   C                     READCSCR001S1               9190
|   C* @END                                                          *
| 01-C                     END
|    C*                                                               *
|    C*
08===C           $S01BK    ENDSR
     C/EJECT
     C*****************************************************************
     C* S01EDT - SCRN SUB
     C*****************************************************************
09===C           S01EDT    BEGSR
|    C*
|    C*---------------------------------------------------------------*
|    C*                                                               *
|    C* ** Process Maintenance on Detail Panel (MB)                   *
|    C* **   1. Check for any selected records, If record             *
|    C* **      selected, display detail panel.                       *
|    C* UPDFLG = 0                                                    *
|    C* I01 = 0                                                       *
|    C* @DOBLK D.POA001M                                              *
|    C* I01 = I01+1                                                   *
|    C*                                                               *
|    C* ** display detail screen                                      *
|    C* @IF (FL0001=2)|(FL0001=4)|(FL0001=5)                          *
|    C* MODE = FL0001                                                 *
|    C* ** set keys from hidden key arrays.                           *
|    C* PA01 = A001{I01}                                              *
|    C* PA02 = A002{I01}                                              *
|    C* PA03 = A003{I01}                                              *
|    C* ** Get record and any secondary records.                      *
|    C* @GETREC D.POA001M,F.POPALF,F.MTMBPF,*EQ,PA01,PA02,PA03        *
|    C* ** Display Screen.                                            *
|    C* @EXSCR SC0002                                                 *
|    C* FL0001 = 0                                                    *
|    C* UPDFLG = 1                                                    *
|    C* @END                                                          *
|    C* ** Process any optional action codes.                         *
|    C*    1. Set keys from hidden key arrays.                        *
|    C*    2. Get record and any secondary records.                   *
|    C*    3. Display Screen.                                         *
|    C*                                                               *
|    C* @IF FL0001=06                                                 *
|    C* MODE = FL0001                                                 *
|    C* PA01 = A001{I01}                                              *
|    C* PA02 = A002{I01}                                              *
|    C* PA03 = A003{I01}                                              *
|    C* @GETREC D.POA001M,F.POPALF,F.MTMBPF,*EQ,PA01,PA02,PA03        *
|    C* @IF STS(D.POA001M,F.POPALF)=*YES                              *
|    C* @EXSCR SC0003                                                 *
|    C* FL0001 = 0                                                    *
|    C* @ELSE                                                         *
|    C* @DSPERR FL0001,'Record Not Found'                             *
|    C* @END                                                          *
|    C* UPDFLG = 1                                                    *
|    C* @ELSE                                                         *
|    C* @END                                                          *
|    C*                                                               *
|    C*                                                               *
|    C* ** If the action choice is not                                *
|    C* ** one of the allowed values,                                 *
|    C* ** display error message.                                     *
|    C* @IF (FL0001=0)&(UPDFLG=0)                                    *
|    C* @DSPERR FL0001,'Invalid action choice'                        *
|    C* @END                                                          *
|    C* @END                                                          *
|    C*---------------------------------------------------------------*
|    C* ** Process Maintenance on Detail Panel (MB)
|    C* **   1. Check for any selected records, If record
|    C* **      selected, display detail panel.
|    C* UPDFLG = 0
|    C                     Z-ADD*ZERO     UPDFLG
|    C* I01 = 0
|    C                     Z-ADD*ZERO     Z3
|    C* @DOBLK D.POA001M
|    C*
|    C                     Z-ADD1         RRN1             INIT RRN
|    C                     MOVEA'00'      *IN,90
| 01-C           *IN90     DOUEQ'1'
|   C           *IN91     OREQ '1'
|   C           *IN64     OREQ '0'
|   C                     READCSCR001S1               9190
| 02-C           *IN90     IFEQ '0'
|   C           *IN91     ANDEQ'0'
|   C* I01 = I01+1
|   C                     ADD  1         Z3
|   C*                                                               *
|   C* ** display detail screen
|   C* @IF (FL0001=2)|(FL0001=4)|(FL0001=5)
| 03-C           FL0001    IFEQ 2
|   C           FL0001    OREQ 4
|   C           FL0001    OREQ 5
|   C* MODE = FL0001
|   C                     Z-ADDFL0001    MODE
|   C* ** set keys from hidden key arrays.
|   C* PA01 = A001{I01}
|   C                     MOVE A01,Z3    XA01
|   C* PA02 = A002{I01}
|   C                     MOVE A02,Z3    XA02
|   C* PA03 = A003{I01}
|   C                     MOVE A03,Z3    XA03
|   C* ** Get record and any secondary records.
|   C* @GETREC D.POA001M,F.POPALF,F.MTMBPF,*EQ,PA01,PA02,PA03
|   C*
|   C                     EXSR S017
|   C* ** Display Screen.
|   C* @EXSCR SC0002
|   C                     ADD  1         SP
|   C                     MOVEL'SC0001  'SID,SP
|   C                     MOVE 'F'       STY,SP
|   C                     MOVEA*IN       IN01
|   C                     UPDATSCR001S1               90
|   C                     EXSR S002
|   C                     MOVE *BLANKS   SID,SP
|   C                     MOVE *BLANKS   STY,SP
|   C                     SUB  1         SP
| 04-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $S01ED
| 04-C                     END
|   C           RRN1      CHAINSCR001S1             9091
|   C                     MOVEAIN01      *IN
|   C                     MOVE '1'       *IN79
|   C* FL0001 = 0
|   C                     Z-ADD*ZERO     FL0001
|   C* UPDFLG = 1
|   C                     Z-ADD1         UPDFLG
|   C* @END                                                          *
| 03-C                     END
|   C* ** Process any optional action codes.
|   C*    1. Set keys from hidden key arrays.
|   C*    2. Get record and any secondary records.
|   C*    3. Display Screen.
|   C*                                                               *
|   C* @IF FL0001=06
| 05-C           FL0001    IFEQ 6
|   C* MODE = FL0001
|   C                     Z-ADDFL0001    MODE
|   C* PA01 = A001{I01}
|   C                     MOVE A01,Z3    XA01
|   C* PA02 = A002{I01}
|   C                     MOVE A02,Z3    XA02
|   C* PA03 = A003{I01}
|   C                     MOVE A03,Z3    XA03
|   C* @GETREC D.POA001M,F.POPALF,F.MTMBPF,*EQ,PA01,PA02,PA03
|   C*
|   C                     EXSR S017
|   C* @IF STS(D.POA001M,F.POPALF)=*YES
|   C*  Status of last file I/O
| 06-C           STS01     IFEQ *ZERO
|   C                     Z-ADD1         RNM031
| 06*C                     ELSE
|   C                     Z-ADD0         RNM031
| 06-C                     END
| 07-C           RNM031    IFEQ XYES
|   C                     Z-ADD1         RNM031
| 07*C                     ELSE
|   C                     Z-ADD0         RNM031
| 07-C                     END
| 08-C           RNM031    IFEQ 1
|   C* @EXSCR SC0003
|   C                     ADD  1         SP
|   C                     MOVEL'SC0001  'SID,SP
|   C                     MOVE 'F'       STY,SP
|   C                     MOVEA*IN       IN01
|   C                     UPDATSCR001S1               90
|   C                     EXSR S003
|   C                     MOVE *BLANKS   SID,SP
|   C                     MOVE *BLANKS   STY,SP
|   C                     SUB  1         SP
| 09-C           LRFLAG    IFNE *BLANK
|   C                     GOTO $S01ED
| 09-C                     END
|   C           RRN1      CHAINSCR001S1             9091
|   C                     MOVEAIN01      *IN
|   C                     MOVE '1'       *IN79
|   C* FL0001 = 0
|   C                     Z-ADD*ZERO     FL0001
|   C* @ELSE                                                         *
| 08*C                     ELSE
|   C* @DSPERR FL0001,'Record Not Found'
|   C                     MOVELA1,12     MSGDTA
|   C                     MOVE 'A'       MSGACT
|   C                     EXSR SMSG
|   C                     MOVE 'X'       DSPERR
|   C                     MOVEL'FL0001  'FLDNAM
|   C                     Z-ADD*ZERO     FLDINX
|   C                     MOVE *BLANK    FLDSCR
|   C                     MOVEL'SC0001  'FLDSCR
|   C                     EXSR SATRIB
|   C* @END                                                          *
| 08-C                     END
|   C* UPDFLG = 1
|   C                     Z-ADD1         UPDFLG
|   C* @ELSE                                                         *
| 05*C                     ELSE
|   C* @END                                                          *
| 05-C                     END
|   C*                                                               *
|   C*                                                               *
|   C* ** If the action choice is not
|   C* ** one of the allowed values,
|   C* ** display error message.
|   C* @IF (FL0001=0)&(UPDFLG=0)
| 10-C           FL0001    IFNE *ZERO
|   C           UPDFLG    ANDEQ*ZERO
|   C* @DSPERR FL0001,'Invalid action choice'
|   C                     MOVELA1,13     MSGDTA
|   C                     MOVE 'A'       MSGACT
|   C                     EXSR SMSG
|   C                     MOVE 'X'       DSPERR
|   C                     MOVEL'FL0001  'FLDNAM
|   C                     Z-ADD*ZERO     FLDINX
|   C                     MOVE *BLANK    FLDSCR
|   C                     MOVEL'SC0001  'FLDSCR
|   C                     EXSR SATRIB
|   C* @END                                                          *
| 10-C                     END
|   C* @END                                                          *
|   C                     UPDATSCR001S1               90
|   C                     MOVEA'01'      *IN,1
| 02-C                     END
| 01-C                     END
|    C*
|    C*
|    C*
09===C           $S01ED    ENDSR
     C/EJECT
     C*****************************************************************
     C* S01FWD - SCRN SUB
     C*****************************************************************
10===C           S01FWD    BEGSR
|    C*
|    C*---------------------------------------------------------------*
|    C*                                                               *
|    C* *** Scroll information forward                                *
|    C*                                                               *
|    C* C01 = 0                                                       *
|    C* ** Clear Hidden key arrays used for later                     *
|    C* ** record retrieval.                                          *
|    C* A001 = ' '                                                    *
|    C* A002 = ' '                                                    *
|    C* A003 = ' '                                                    *
|    C* @IF PRMCNT = 000                                              *
|    C* @GETBLK D.POA001M,F.POPALF,F.MTMBPF,*NX                       *
|    C* C01 = C01+1                                                   *
|    C* ** Save key information in key arrays.                        *
|    C* A001{C01} = PA01                                              *
|    C* A002{C01} = PA02                                              *
|    C* A003{C01} = PA03                                              *
|    C* ** Set any work fields to values in                           *
|    C* ** secondary file fields.                                     *
|    C* @IF STS(D.POA001M,F.MTMBPF)=*YES                              *
|    C* FL0002 = MB03                                                 *
|    C* @END                                                          *
|    C*                                                               *
|    C* @ENDBLK                                                       *
|    C* @END                                                          *
|    C*                                                               *
|    C*---------------------------------------------------------------*
|    C* *** Scroll information forward
|    C*                                                               *
|    C* C01 = 0
|    C                     Z-ADD*ZERO     Z1
|    C* ** Clear Hidden key arrays used for later
|    C* ** record retrieval.
|    C* A001 = ' '
|    C                     MOVEA*BLANKS   A01
|    C* A002 = ' '
|    C                     MOVEA*BLANKS   A02
|    C* A003 = ' '
|    C                     MOVEA*BLANKS   A03
|    C* @IF PRMCNT = 000
| 01-C           PRMCNT    IFEQ *ZERO
|   C* @GETBLK D.POA001M,F.POPALF,F.MTMBPF,*NX
|   C*
|   C*
|   C*
|   C*          ---------------------------------------------------------------
|   C*          | Initialize Loop
|   C*          ---------------------------------------------------------------
|   C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
|   C                     Z-ADD11        WLCNTR           INIT LOOP CNTR
|   C                     EXSR S015                       INZ SFL
|   C*          ---------------------------------------------------------------
|   C*          | Setup Loop To Retrieve Record
|   C*          ---------------------------------------------------------------
| 02-C           SWRD01    DOUNE'Y'                        RD.SW.POPALF    MTMBP
|   C           WCNTR     ORGE WLCNTR
|   C                     Z-ADD1         WFILE#           SET FILE#
|   C                     READ POPALF                 9190
| 03-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     Z-ADD*ZERO     HRC01            ZERO HIDDEN RRN
| 03*C                     ELSE
|   C                     MOVE 'Y'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 03-C                     END
|   C*
| 04-C           SWRD01    IFEQ 'Y'                        RD.SW.POPALF    MTMBP
|   C                     Z-ADD2         WFILE#           SET FILE#
|   C                     MOVEL*BLANK    KA0101           供應商代號
|   C                     MOVELPA01      KA0101
|   C           K0002     CHAINMTMBPF               9091
| 05-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD02           RD.SW.MTMBPF    POPAP
| 05*C                     ELSE
|   C                     MOVE 'Y'       SWRD02           RD.SW.MTMBPF    POPAP
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 05-C                     END
|   C*
|   C                     ADD  1         WCNTR            INCREMENT CNTR
|   C                     Z-ADDWCNTR     WRRN01
|   C           RRN1      CHAINSCR001S1             9091
|   C                     Z-ADD1         WFILE#           SET FILE#
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
|   C                     Z-ADD2         WFILE#           SET FILE#
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
|   C* C01 = C01+1
|   C                     ADD  1         Z1
|   C* ** Save key information in key arrays.
|   C* A001{C01} = PA01
|   C                     MOVE XA01      A01,Z1
|   C* A002{C01} = PA02
|   C                     MOVE XA02      A02,Z1
|   C* A003{C01} = PA03
|   C                     MOVE XA03      A03,Z1
|   C* ** Set any work fields to values in
|   C* ** secondary file fields.
|   C* @IF STS(D.POA001M,F.MTMBPF)=*YES
|   C*  Status of last file I/O
| 06-C           STS02     IFEQ *ZERO
|   C                     Z-ADD1         RNM037
| 06*C                     ELSE
|   C                     Z-ADD0         RNM037
| 06-C                     END
| 07-C           RNM037    IFEQ XYES
|   C                     Z-ADD1         RNM037
| 07*C                     ELSE
|   C                     Z-ADD0         RNM037
| 07-C                     END
| 08-C           RNM037    IFEQ 1
|   C* FL0002 = MB03
|   C                     MOVE XB03      FL0002
|   C* @END                                                          *
| 08-C                     END
|   C*                                                               *
|   C* @ENDBLK                                                       *
|   C                     UPDATSCR001S1               90
|   C                     ADD  1         RRN1             INCREMENT RRN
| 04-C                     END
| 02-C                     END
| 09-C           WCNTR     IFGT *ZERO
|   C                     SUB  1         RRN1
| 09-C                     END
|   C                     EXSR S016                       CHK EOF
|   C                     READCSCR001S1               9190
|   C* @END                                                          *
| 01-C                     END
|    C*                                                               *
|    C*
10===C           $S01FW    ENDSR
     C/EJECT
     C*****************************************************************
     C* S03BKW - SCRN SUB
     C*****************************************************************
11===C           S03BKW    BEGSR
|    C*
|    C*---------------------------------------------------------------*
|    C*                                                               *
|    C* ***  Scroll information backward                              *
|    C*                                                               *
|    C* C03 = 0                                                       *
|    C* A004 = ' '                                                    *
|    C* A005 = ' '                                                    *
|    C* A006 = ' '                                                    *
|    C* @GETBLK D.POA001M,F.POPAPF,*PV,SVK004,SVK005                  *
|    C* C03 = C03+1                                                   *
|    C* A004{C03} = PA01                                              *
|    C* A005{C03} = PA02                                              *
|    C* A006{C03} = PA03                                              *
|    C* @ENDBLK                                                       *
|    C*---------------------------------------------------------------*
|    C* ***  Scroll information backward
|    C*                                                               *
|    C* C03 = 0
|    C                     Z-ADD*ZERO     Z2
|    C* A004 = ' '
|    C                     MOVEA*BLANKS   A04
|    C* A005 = ' '
|    C                     MOVEA*BLANKS   A05
|    C* A006 = ' '
|    C                     MOVEA*BLANKS   A06
|    C* @GETBLK D.POA001M,F.POPAPF,*PV,SVK004,SVK005
|    C*
|    C                     EXSR S018
|    C*
|    C                     MOVEL*BLANK    KA0101
|    C                     MOVELSVK004    KA0101
|    C                     MOVEL*BLANK    KA0202
|    C                     MOVELSVK005    KA0202
|    C*
|    C*          ---------------------------------------------------------------
|    C*          | Initialize Loop
|    C*          ---------------------------------------------------------------
|    C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
|    C                     Z-ADD5         WLCNTR           INIT LOOP CNTR
|    C                     EXSR S020                       INZ SFL
|    C*          ---------------------------------------------------------------
|    C*          | Setup Loop To Retrieve Record
|    C*          ---------------------------------------------------------------
| 01-C           SWRD03    DOUNE'Y'                        RD.SW.POPAPF
|   C           WCNTR     ORGE WLCNTR
|   C                     Z-ADD3         WFILE#           SET FILE#
|   C           K0003     READEPOPAPF                 9190
| 02-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD03           RD.SW.POPAPF
|   C                     Z-ADD*ZERO     HRC03            ZERO HIDDEN RRN
| 02*C                     ELSE
|   C                     MOVE 'Y'       SWRD03           RD.SW.POPAPF
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 02-C                     END
|   C*
| 03-C           SWRD03    IFEQ 'Y'                        RD.SW.POPAPF
|   C                     ADD  1         WCNTR            INCREMENT CNTR
|   C                     Z-ADDWCNTR     WRRN02
|   C           RRN2      CHAINSCR003S1             9091
|   C                     Z-ADD3         WFILE#           SET FILE#
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
|   C*
|   C* C03 = C03+1
|   C                     ADD  1         Z2
|   C* A004{C03} = PA01
|   C                     MOVE XA01      A04,Z2
|   C* A005{C03} = PA02
|   C                     MOVE XA02      A05,Z2
|   C* A006{C03} = PA03
|   C                     MOVE XA03      A06,Z2
|   C* @ENDBLK                                                       *
|   C                     UPDATSCR003S1               90
|   C                     ADD  1         RRN2             INCREMENT RRN
| 03-C                     END
| 01-C                     END
| 04-C           WCNTR     IFGT *ZERO
|   C                     SUB  1         RRN2
| 04-C                     END
|    C                     EXSR S021                       CHK EOF
|    C                     READCSCR003S1               9190
|    C*
11===C           $S03BK    ENDSR
     C/EJECT
     C*****************************************************************
     C* S03EDT - SCRN SUB
     C*****************************************************************
12===C           S03EDT    BEGSR
|    C*
|    C*---------------------------------------------------------------*
|    C*                                                               *
|    C* **   Process Maintenance List Panel (ML)                      *
|    C* **   1. Check for any selected records,                       *
|    C* UPDFLG = 0                                                    *
|    C* I03 = 0                                                       *
|    C* @DOBLK D.POA001M                                              *
|    C* I03 = I03+1                                                   *
|    C*                                                               *
|    C* ** Add new record                                             *
|    C* @IF FL0003=1                                                  *
|    C* ** Set key values to header file                              *
|    C* PA01 = PA01                                                   *
|    C* PA02 = PA02                                                   *
|    C* @WRITE D.POA001M,F.POPAPF                                     *
|    C* UPDFLG = 1                                                    *
|    C* @ELSE                                                         *
|    C*                                                               *
|    C* ** Update existing record                                     *
|    C* @IF FL0003=2                                                  *
|    C* @UPDATE D.POA001M,F.POPAPF                                    *
|    C* FL0003 = 0                                                    *
|    C* UPDFLG = 1                                                    *
|    C* @ELSE                                                         *
|    C*                                                               *
|    C* ** Delete existing record                                     *
|    C* @IF FL0003=4                                                  *
|    C* @DELETE D.POA001M,F.POPAPF                                    *
|    C* FL0003 = 0                                                    *
|    C* UPDFLG = 1                                                    *
|    C* @END                                                          *
|    C* @END                                                          *
|    C* @END                                                          *
|    C* ** Process any optional action choices.                       *
|    C* ** 1. Set key values to hidden key arrays.                    *
|    C* ** 2. Retrieve file and any secondary files.                  *
|    C* ** 3. Display screen.                                         *
|    C*                                                               *
|    C* ** If the action choice is not                                *
|    C* ** one of the allowed values,                                 *
|    C* ** display error message.                                     *
|    C* @IF (FL0003=0)&(UPDFLG=0)                                    *
|    C* @DSPERR FL0003,'Invalid action choice'                        *
|    C* @END                                                          *
|    C* @END                                                          *
|    C*---------------------------------------------------------------*
|    C* **   Process Maintenance List Panel (ML)
|    C* **   1. Check for any selected records,
|    C* UPDFLG = 0
|    C                     Z-ADD*ZERO     UPDFLG
|    C* I03 = 0
|    C                     Z-ADD*ZERO     I03
|    C* @DOBLK D.POA001M
|    C*
|    C                     Z-ADD1         RRN2             INIT RRN
|    C                     MOVEA'00'      *IN,90
| 01-C           *IN90     DOUEQ'1'
|   C           *IN91     OREQ '1'
|   C           *IN64     OREQ '0'
|   C                     READCSCR003S1               9190
| 02-C           *IN90     IFEQ '0'
|   C           *IN91     ANDEQ'0'
|   C* I03 = I03+1
|   C                     ADD  1         I03
|   C*                                                               *
|   C* ** Add new record
|   C* @IF FL0003=1
| 03-C           FL0003    IFEQ 1
|   C* ** Set key values to header file
|   C* PA01 = PA01
|   C                     MOVE XA01      XA01
|   C* PA02 = PA02
|   C                     MOVE XA02      XA02
|   C* @WRITE D.POA001M,F.POPAPF
|   C*
|   C                     EXSR S022
|   C* UPDFLG = 1
|   C                     Z-ADD1         UPDFLG
|   C* @ELSE                                                         *
| 03*C                     ELSE
|   C*                                                               *
|   C* ** Update existing record
|   C* @IF FL0003=2
| 04-C           FL0003    IFEQ 2
|   C* @UPDATE D.POA001M,F.POPAPF
|   C*
|   C                     EXSR S023
|   C* FL0003 = 0
|   C                     Z-ADD*ZERO     FL0003
|   C* UPDFLG = 1
|   C                     Z-ADD1         UPDFLG
|   C* @ELSE                                                         *
| 04*C                     ELSE
|   C*                                                               *
|   C* ** Delete existing record
|   C* @IF FL0003=4
| 05-C           FL0003    IFEQ 4
|   C* @DELETE D.POA001M,F.POPAPF
|   C*
|   C                     MOVE 'N'       SW0001
|   C                     EXSR S024
|   C* FL0003 = 0
|   C                     Z-ADD*ZERO     FL0003
|   C* UPDFLG = 1
|   C                     Z-ADD1         UPDFLG
|   C* @END                                                          *
| 05-C                     END
|   C* @END                                                          *
| 04-C                     END
|   C* @END                                                          *
| 03-C                     END
|   C* ** Process any optional action choices.
|   C* ** 1. Set key values to hidden key arrays.
|   C* ** 2. Retrieve file and any secondary files.
|   C* ** 3. Display screen.
|   C*                                                               *
|   C* ** If the action choice is not
|   C* ** one of the allowed values,
|   C* ** display error message.
|   C* @IF (FL0003=0)&(UPDFLG=0)
| 06-C           FL0003    IFNE *ZERO
|   C           UPDFLG    ANDEQ*ZERO
|   C* @DSPERR FL0003,'Invalid action choice'
|   C                     MOVELA1,13     MSGDTA
|   C                     MOVE 'A'       MSGACT
|   C                     EXSR SMSG
|   C                     MOVE 'X'       DSPERR
|   C                     MOVEL'FL0003  'FLDNAM
|   C                     Z-ADD*ZERO     FLDINX
|   C                     MOVE *BLANK    FLDSCR
|   C                     MOVEL'SC0003  'FLDSCR
|   C                     EXSR SATRIB
|   C* @END                                                          *
| 06-C                     END
|   C* @END                                                          *
|   C                     UPDATSCR003S1               90
|   C                     MOVEA'01'      *IN,1
| 02-C                     END
| 01-C                     END
|    C*
|    C*
|    C*
12===C           $S03ED    ENDSR
     C/EJECT
     C*****************************************************************
     C* S03FWD - SCRN SUB
     C*****************************************************************
13===C           S03FWD    BEGSR
|    C*
|    C*---------------------------------------------------------------*
|    C*                                                               *
|    C* *** Scroll information forward                                *
|    C*                                                               *
|    C* C03 = 0                                                       *
|    C* A004 = ' '                                                    *
|    C* A005 = ' '                                                    *
|    C* A006 = ' '                                                    *
|    C* @GETBLK D.POA001M,F.POPAPF,*NE,SVK004,SVK005                  *
|    C* C03 = C03+1                                                   *
|    C* A004{C03} = PA01                                              *
|    C* A005{C03} = PA02                                              *
|    C* A006{C03} = PA03                                              *
|    C* @ENDBLK                                                       *
|    C*---------------------------------------------------------------*
|    C* *** Scroll information forward
|    C*                                                               *
|    C* C03 = 0
|    C                     Z-ADD*ZERO     Z2
|    C* A004 = ' '
|    C                     MOVEA*BLANKS   A04
|    C* A005 = ' '
|    C                     MOVEA*BLANKS   A05
|    C* A006 = ' '
|    C                     MOVEA*BLANKS   A06
|    C* @GETBLK D.POA001M,F.POPAPF,*NE,SVK004,SVK005
|    C*
|    C*
|    C                     MOVEL*BLANK    KA0101
|    C                     MOVELSVK004    KA0101
|    C                     MOVEL*BLANK    KA0202
|    C                     MOVELSVK005    KA0202
|    C*
|    C*          ---------------------------------------------------------------
|    C*          | Initialize Loop
|    C*          ---------------------------------------------------------------
|    C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
|    C                     Z-ADD5         WLCNTR           INIT LOOP CNTR
|    C                     EXSR S020                       INZ SFL
|    C*          ---------------------------------------------------------------
|    C*          | Setup Loop To Retrieve Record
|    C*          ---------------------------------------------------------------
| 01-C           SWRD03    DOUNE'Y'                        RD.SW.POPAPF
|   C           WCNTR     ORGE WLCNTR
|   C                     Z-ADD3         WFILE#           SET FILE#
|   C           K0003     READEPOPAPF                 9190
| 02-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD03           RD.SW.POPAPF
|   C                     Z-ADD*ZERO     HRC03            ZERO HIDDEN RRN
| 02*C                     ELSE
|   C                     MOVE 'Y'       SWRD03           RD.SW.POPAPF
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 02-C                     END
|   C*
| 03-C           SWRD03    IFEQ 'Y'                        RD.SW.POPAPF
|   C                     ADD  1         WCNTR            INCREMENT CNTR
|   C                     Z-ADDWCNTR     WRRN02
|   C           RRN2      CHAINSCR003S1             9091
|   C                     Z-ADD3         WFILE#           SET FILE#
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
|   C* C03 = C03+1
|   C                     ADD  1         Z2
|   C* A004{C03} = PA01
|   C                     MOVE XA01      A04,Z2
|   C* A005{C03} = PA02
|   C                     MOVE XA02      A05,Z2
|   C* A006{C03} = PA03
|   C                     MOVE XA03      A06,Z2
|   C* @ENDBLK                                                       *
|   C                     UPDATSCR003S1               90
|   C                     ADD  1         RRN2             INCREMENT RRN
| 03-C                     END
| 01-C                     END
| 04-C           WCNTR     IFGT *ZERO
|   C                     SUB  1         RRN2
| 04-C                     END
|    C                     EXSR S021                       CHK EOF
|    C                     READCSCR003S1               9190
|    C*
13===C           $S03FW    ENDSR
     C/EJECT
     C*****************************************************************
     C* SCMD - Processes OS/400 Commands
     C*****************************************************************
14===C           SCMD      BEGSR
|    C*
|    C                     MOVE 'N'       CMDERR           Error flag
|    C                     Z-ADD2560      LEN
|    C                     MOVE '1'       *IN79
|    C* Validate command syntax
|    C*
|    C                     CALL 'QCMDCHK'              92
|    C                     PARM           CST              CMD string
|    C                     PARM           LEN              Length
|    C* Check command syntax failure
|    C*
| 01-C           *IN92     IFEQ '1'
|   C                     MOVE 'Y'       CMDERR
| 01-C                     END
|    C* Execute command
|    C*
| 02-C           CMDERR    IFEQ 'N'
|   C                     CALL 'QCMDEXC'              92
|   C                     PARM           CST
|   C                     PARM           LEN
|   C* Check command failure
|   C*
| 03-C           *IN92     IFEQ '1'
|   C                     MOVE 'Y'       CMDERR
| 03-C                     END
| 02-C                     END
|    C*
|    C                     MOVEA*BLANKS   CST
14===C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SMSG - Message subfile handler
     C*        calls message handling program to remove or add
     C*        error messages to message subfile.
     C*****************************************************************
15===C           SMSG      BEGSR
|    C*
|    C* Add message to message subfile
|    C*
| 01-C           MSGACT    IFEQ 'A'
|   C           MSGACT    OREQ 'R'
|   C                     MOVE 'Y'       MSGFLG
| 01*C                     ELSE
|   C* Clear message subfile
|   C*
| 02-C           MSGACT    IFEQ 'C'
|   C                     MOVE 'N'       MSGFLG
| 02-C                     END
| 01-C                     END
|    C*
| 03-C           MSGACT    IFEQ 'C'
|   C           MSGACT    OREQ 'A'
|   C                     CALL 'CLMSG'   PMSGCL
|   C                     MOVE *BLANK    MSGID
|   C                     MOVE *BLANK    MSGDTA
|   C                     MOVE *BLANK    MSGF
|   C                     MOVE *BLANK    MSGFL
| 03-C                     END
|    C*
15===C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SHELP - Process help text.
     C*****************************************************************
16===C           SHELP     BEGSR
|    C* Get row
|    C                     Z-ADD0         HALFWD
|    C                     MOVE ROW       BYTE2
|    C                     Z-ADDHALFWD    APPROW
|    C* Get column
|    C                     Z-ADD0         HALFWD
|    C                     MOVE COL       BYTE2
|    C                     Z-ADDHALFWD    APPCOL
|    C* Call help processing program.
|    C*
|    C                     CALL 'CAHELP'  PHELP
16===C                     ENDSR
     C/EJECT
     C**************************************************************************
     C* S005   - @SETLL D.POA001M,F.POPALF,SVK001,SVK002,SVK003
     C**************************************************************************
17===C           S005      BEGSR
|    C                     Z-ADD1         WFILE#           SET FILE#
|    C                     MOVE 'Y'       SWRD01           RD.SW.POPALF    MTMBP
|    C                     MOVE 'N'       SWRD02           RD.SW.MTMBPF    POPAP
|    C                     MOVE 'N'       SWRD03           RD.SW.POPAPF
|    C                     MOVEL*LOVAL    HA03             產品代號
|    C*
|    C                     MOVELSVK001    KA0101
|    C                     MOVELSVK001    HA01             供應商代號
|    C                     MOVELSVK001    PA01             供應商代號
|    C                     MOVELSVK002    KA0202
|    C                     MOVELSVK002    HA02             報價單號
|    C                     MOVELSVK002    PA02             報價單號
|    C                     MOVELSVK003    KA0303
|    C                     MOVELSVK003    HA03             產品代號
|    C                     MOVELSVK003    PA03             產品代號
|    C*
|    C           K0001     SETLLPOPALF
17===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S006   - @GETREC D.POA001M,F.POPALF,*lock,*eq,SVK001,SVK002,SVK003
     C**************************************************************************
18===C           S006      BEGSR
|    C                     Z-ADD1         WFILE#           SET FILE#
|    C                     MOVEL*BLANK    KA0101
|    C                     MOVELSVK001    KA0101
|    C                     MOVEL*BLANK    KA0202
|    C                     MOVELSVK002    KA0202
|    C                     MOVEL*BLANK    KA0303
|    C                     MOVELSVK003    KA0303
|    C           K0001     CHAINPOPALF               9091
| 01-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     Z-ADD*ZERO     HRC01            ZERO RRN
| 01*C                     ELSE
|   C                     MOVE 'Y'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
|   C                     Z-ADD4         WFILE#           SET FILE#
|   C           HRC01     CHAINPOPALFX              9091  POPALF
|   C                     Z-ADDSTS04     STS01            SYNC STATUS
|   C*
| 02-C           *IN91     IFEQ '1'                        RCK LOCK
|   C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
| 02*C                     ELSE
|   C                     Z-ADD*HIVAL    STS04            REC LOCKED
| 02-C                     END
|   C*
| 01-C                     END
|    C*
18===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S007   - @GETREC D.POA001M,F.MTMBPF,*eq,PA01
     C**************************************************************************
19===C           S007      BEGSR
|    C                     Z-ADD2         WFILE#           SET FILE#
|    C                     MOVEL*BLANK    KA0101
|    C                     MOVELXA01      KA0101
|    C           K0002     CHAINMTMBPF               9091
| 01-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD02           RD.SW.MTMBPF    POPAP
| 01*C                     ELSE
|   C                     MOVE 'Y'       SWRD02           RD.SW.MTMBPF    POPAP
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 01-C                     END
|    C*
19===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S008   - @GETREC D.POA001M,F.POPALF,*eq,SVK001,SVK002,SVK003
     C**************************************************************************
20===C           S008      BEGSR
|    C                     Z-ADD1         WFILE#           SET FILE#
|    C                     MOVEL*BLANK    KA0101
|    C                     MOVELSVK001    KA0101
|    C                     MOVEL*BLANK    KA0202
|    C                     MOVELSVK002    KA0202
|    C                     MOVEL*BLANK    KA0303
|    C                     MOVELSVK003    KA0303
|    C           K0001     CHAINPOPALF               9091
| 01-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     Z-ADD*ZERO     HRC01            ZERO RRN
| 01*C                     ELSE
|   C                     MOVE 'Y'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 01-C                     END
|    C*
20===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S009   - @UPDATE D.POA001M,F.POPALF
     C**************************************************************************
21===C           S009      BEGSR
|    C                     Z-ADD4         WFILE#           SET FILE#
|    C                     Z-ADDHRC01     REC01
|    C           HRC01     CHAINPOPALFX              9091
|    C                     Z-ADDSTS04     STS01            SYNC STATUS
|    C*
| 01-C           *IN91     IFEQ '1'                        RCK LOCK
|   C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
| 01-C                     END
|    C*
| 02-C           *IN90     IFEQ '0'
|   C           *IN91     ANDEQ'0'
|   C*
B2REM ***************************
B2REM ****  CONVERSION START  ***
B2REM ***************************
B2OLDC*          PA01      IFEQ XA01
B2OLDC*          PA02      ANDEQXA02
B2OLDC*          PA03      ANDEQWA03
B2OLDC*          PA04      ANDEQXA04
B2OLDC*          PA06      ANDEQXA06
B2OLDC*          PA07      ANDEQXA07
B2OLDC*          PA08      ANDEQXA08
B2OLDC*          PA10      ANDEQXA10
B2OLDC*          PA11      ANDEQXA11
B2NEWC                     MOVE XA04      HB2@F6  6
B2NEWC                     EXSR HB@68L                     + CENTURY 6->8 LEFT
B2NEWC                     MOVE HB2@T8    H@8N01  80
B2NEWC                     MOVE XA06      HB2@F6  6
B2NEWC                     EXSR HB@68L                     + CENTURY 6->8 LEFT
B2NEWC                     MOVE HB2@T8    H@8N02  80
B2NEWC           PA01      IFEQ XA01
B2NEWC           PA02      ANDEQXA02
B2NEWC           PA03      ANDEQWA03
B2NEWC           PA04      ANDEQH@8N01
B2NEWC           PA06      ANDEQH@8N02
B2NEWC           PA07      ANDEQXA07
B2NEWC           PA08      ANDEQXA08
B2NEWC           PA10      ANDEQXA10
B2NEWC           PA11      ANDEQXA11
B2INF *CVR0001 sev.00 Field PA01 is not a date or year
B2INF *CVR0001 sev.00 Field XA01 is not a date or year
B2INF *CVR0001 sev.00 Field PA02 is not a date or year
B2INF *CVR0001 sev.00 Field XA02 is not a date or year
B2INF *CVR0001 sev.00 Field PA03 is not a date or year
B2INF *CVR0001 sev.00 Field WA03 is not a date or year
B2INF *CVR0001 sev.00 Field PA07 is not a date or year
B2INF *CVR0001 sev.00 Field XA07 is not a date or year
B2INF *CVR0001 sev.00 Field PA08 is not a date or year
B2INF *CVR0001 sev.00 Field XA08 is not a date or year
B2INF *CVR0001 sev.00 Field PA10 is not a date or year
B2INF *CVR0001 sev.00 Field XA10 is not a date or year
B2INF *CVR0001 sev.00 Field PA11 is not a date or year
B2INF *CVR0001 sev.00 Field XA11 is not a date or year
B2REM ***************************
B2REM *****  CONVERSION END  ****
B2REM ***************************
|   C                     EXCPTEXC001                     RLS LCK POPALFX
| 03*C                     ELSE
|   C                     Z-ADD1         WFILE#           SET FILE#
|   C                     EXSR SMVTOF                     MOVE FLD TO FILE
|   C                     UPDATPA0X                   90  UPDATE POPALF
|   C                     Z-ADDSTS04     STS01            SYNC STATUS
|   C*
| 04-C           *IN91     IFEQ '1'                        RCK LOCK
|   C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
| 04-C                     END
|   C*
| 05-C           *IN90     IFEQ '0'                        CANNOT UPDATE
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
|   C                     MOVELA1,4      MSGDTA           Record update for fil
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 05-C                     END                             END-UPDATE STATUS
| 03-C                     END                             END-FLD COMPARE
|   C*
|   C*
| 02*C                     ELSE
|   C                     MOVELA1,5      MSGDTA           Unable to update reco
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 02-C                     END                             END-STATUS
21===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S010   - @DELETE D.POA001M,F.POPALF
     C**************************************************************************
22===C           S010      BEGSR
|    C                     MOVEA'00'      *IN,90
|    C                     MOVE *HIVAL    SVS01
|    C                     MOVEL*BLANK    KA0101
|    C                     MOVELXA01      KA0101
|    C                     MOVEL*BLANK    KA0202
|    C                     MOVELXA02      KA0202
|    C                     MOVEL*BLANK    KA0303
|    C                     MOVELWA03      KA0303
|    C           K0001     SETLLPOPALF                     SETLL  POPALF
|    C*          ---------------------------------------------------------------
|    C*          | Setup Loop To Delete Record - POPALF
|    C*          ---------------------------------------------------------------
| 01-C           *IN90     DOUEQ'1'
|   C           *IN91     OREQ '1'
|   C           SW0001    OREQ 'Y'
|   C*
|   C                     Z-ADD1         WFILE#           SET FILE#
|   C           K0001     READEPOPALF                 9190READE  POPALF
|   C*
| 02-C           *IN90     IFEQ '0'
|   C           *IN91     ANDEQ'0'
|   C*
|   C                     Z-ADD4         WFILE#           SET FILE#
|   C           REC01     CHAINPOPALFX              9091
| 03-C           *IN90     IFEQ '0'
|   C           *IN91     ANDEQ'0'
|   C*
|   C                     DELETPOPALFX                91  DELETE POPALF
|   C                     Z-ADDSTS04     SVS01            SAVE FILE STS
|   C*          ---------------------------------------------------------------
|   C*          | Send Message To Indicate Delete Status
|   C*          ---------------------------------------------------------------
| 04-C           *IN91     IFEQ '0'
|   C                     MOVELA1,6      MSGDTA           Record deleted from f
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 04-C                     END                             END-DEL STATUS
|   C*
| 03*C                     ELSE                            END-READX-FILE
| 05-C           *IN90     IFEQ '1'                        NO RCD FOUND
|   C                     MOVELA1,7      MSGDTA           No record found to de
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 05*C                     ELSE
|   C                     MOVE 'Y'       MSGFLG           SET ON ERROR FLAG
| 05-C                     END                             READ KEY FILE FAIL
|   C*
| 03-C                     END                             END-READKEY FILE
| 02-C                     END                             END-READ KEY FILE
| 01-C                     END                             EMD-DOUNE LOOP
|    C                     MOVEA'00'      *IN,90
|    C*
|    C           K0001     SETLLPOPALF                     RESUME FILE POINTER
|    C                     Z-ADDSVS01     STS01            RESTORE FILE STS
22===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S011   - @WRITE D.POA001M,F.POPALF
     C**************************************************************************
23===C           S011      BEGSR
|    C                     Z-ADD1         WFILE#           SET FILE#
B2000C                     Z-ADD*ZERO     PAXX             異動日期
|    C                     Z-ADD*ZERO     PAYY             異動時間
|    C                     MOVEL*BLANKS   PAZZ             異動者　
|    C                     MOVEL*BLANKS   PA05             供應商產品代號
|    C                     Z-ADD*ZERO     PA09             單價
|    C                     MOVEL*BLANKS   PA12             產品歸屬
|    C                     EXSR SMVTOF                     MOVE FLD TO FILE
|    C                     Z-ADD4         WFILE#           SET FILE#
|    C                     WRITEPA0X                   90  ADD REC TO POPALF
|    C                     Z-ADDSTS04     STS01            SYNC STATUS
|    C*
| 01-C           *IN90     IFEQ *ZERO                      RECORD ADDED
|   C                     Z-ADDREC04     REC01
|   C                     Z-ADD1         WFILE#           SET FILE#
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
|   C                     MOVELA1,8      MSGDTA           Record added to file
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 01*C                     ELSE
|   C                     MOVELA1,9      MSGDTA           Unable to add record
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 01-C                     END                             END-STATUS
23===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S012   - @SETLL D.POA001M,F.POPAPF,SVK004,SVK005,SVK006
     C**************************************************************************
24===C           S012      BEGSR
|    C                     Z-ADD3         WFILE#           SET FILE#
|    C                     MOVE 'Y'       SWRD03           RD.SW.POPAPF
|    C                     MOVEL*LOVAL    HID003           產品代號
|    C*
|    C                     MOVELSVK004    KA0101
|    C                     MOVELSVK004    HID001           供應商代號
|    C                     MOVELSVK004    PA01             供應商代號
|    C                     MOVELSVK005    KA0202
|    C                     MOVELSVK005    HID002           報價單號
|    C                     MOVELSVK005    PA02             報價單號
|    C                     MOVELSVK006    KA0303
|    C                     MOVELSVK006    HID003           產品代號
|    C                     MOVELSVK006    PA03             產品代號
|    C*
|    C           K0001     SETLLPOPAPF
24===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S013   - @GETBLK D.POA001M,F.POPALF,F.MTMBPF,*PV
     C**************************************************************************
25===C           S013      BEGSR
|    C*
|    C*
|    C*          ---------------------------------------------------------------
|    C*          | Initialize Loop
|    C*          ---------------------------------------------------------------
|    C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
|    C                     Z-ADDWRRN01    WLCNTR           INIT LOOP CNTR
|    C                     ADD  WADJ01    WLCNTR           ADD ADJ.CNTR
|    C*          ---------------------------------------------------------------
|    C*          | Setup Loop To Retrieve Record
|    C*          ---------------------------------------------------------------
| 01-C           SWRD01    DOUNE'Y'                        RD.SW.POPALF    MTMBP
|   C           WCNTR     ORGE WLCNTR
|   C                     Z-ADD1         WFILE#           SET FILE#
|   C                     READPPOPALF                 9190
| 02-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     Z-ADD*ZERO     HRC01            ZERO HIDDEN RRN
| 02*C                     ELSE
|   C                     MOVE 'Y'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 02-C                     END
|   C*
| 03-C           SWRD01    IFEQ 'Y'                        RD.SW.POPALF    MTMBP
|   C                     Z-ADD2         WFILE#           SET FILE#
|   C                     MOVEL*BLANK    KA0101           供應商代號
|   C                     MOVELPA01      KA0101
|   C           K0002     CHAINMTMBPF               9091
| 04-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD02           RD.SW.MTMBPF    POPAP
| 04*C                     ELSE
|   C                     MOVE 'Y'       SWRD02           RD.SW.MTMBPF    POPAP
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 04-C                     END
|   C*
|   C                     ADD  1         WCNTR            INCREMENT CNTR
| 03-C                     END
| 01-C                     END
|    C                     EXSR S014                       CHK BOF
|    C                     READCSCR001S1               9190
25===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S014   - Process To Check BOF -  POPALF    MTMBPF
     C**************************************************************************
26===C           S014      BEGSR
|    C*
| 01-C           SWRD01    IFNE 'Y'                        RD.SW.POPALF    MTMBP
|   C           STS01     ANDNE1122                       RCD LOCK
|   C           STS01     ANDNE1218                       RCD LOCK
|   C*
|   C                     MOVE 'Y'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     Z-ADDSTS01     SVS01            SAVE FILE STS
|   C                     MOVEL*BLANK    KA0101           供應商代號
|   C                     MOVELPA01      KA0101
|   C                     MOVEL*BLANK    KA0202           報價單號
|   C                     MOVELPA02      KA0202
|   C                     MOVEL*BLANK    KA0303           產品代號
|   C                     MOVELPA03      KA0303
|   C           K0001     SETLLPOPALF
|   C                     Z-ADDSVS01     STS01            RESTORE FILE STS
|   C*
|   C                     Z-ADDSTS02     SVS02            SAVE FILE STS
|   C                     MOVEL*BLANK    KA0101           供應商代號
|   C                     MOVELMB01      KA0101
|   C           K0002     SETLLMTMBPF
|   C                     Z-ADDSVS02     STS02            RESTORE FILE STS
|   C*
|   C                     MOVELA1,10     MSGDTA           The beginning of the
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 01-C                     END
26===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S015   - Process To Initialize SubFile - SCR001S1
     C**************************************************************************
27===C           S015      BEGSR
|    C                     MOVEA'0001'    *IN,63           SFLCLR,DSP,NXTCHG,INZ
|    C                     WRITESCR001C1                   CLEAR SUBFILE
| 01-C           1         DO   11        RRN1
|   C           RRN1      CHAINSCR001S1             90
|   C                     UPDATSCR001S1
| 01-C                     END
|    C*
|    C                     MOVEA'1110'    *IN,63           SFLCLR SFLDSP
|    C                     Z-ADD1         RRN1
27===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S016   - Process To Check EOF -  POPALF    MTMBPF
     C**************************************************************************
28===C           S016      BEGSR
|    C*
| 01-C           SWRD01    IFNE 'Y'                        RD.SW.POPALF    MTMBP
|   C           STS01     ANDNE1122                       RCD LOCK
|   C           STS01     ANDNE1218                       RCD LOCK
|   C*
|   C                     MOVE 'Y'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     Z-ADDSTS01     SVS01            SAVE FILE STS
|   C                     MOVEL*BLANK    KA0101           供應商代號
|   C                     MOVELPA01      KA0101
|   C                     MOVEL*BLANK    KA0202           報價單號
|   C                     MOVELPA02      KA0202
|   C                     MOVEL*BLANK    KA0303           產品代號
|   C                     MOVELPA03      KA0303
|   C           K0001     SETGTPOPALF
|   C                     Z-ADDSVS01     STS01            RESTORE FILE STS
|   C*
|   C                     Z-ADDSTS02     SVS02            SAVE FILE STS
|   C                     MOVEL*BLANK    KA0101           供應商代號
|   C                     MOVELMB01      KA0101
|   C           K0002     SETGTMTMBPF
|   C                     Z-ADDSVS02     STS02            RESTORE FILE STS
|   C*
|   C                     Z-ADD1         WADJ01
| 02-C           WCNTR     IFNE *ZERO
|   C                     ADD  11        WADJ01
| 02-C                     END
|   C                     MOVELA1,11     MSGDTA           The end of the file w
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 01*C                     ELSE
|   C                     Z-ADDWRRN01    WADJ01
| 01-C                     END
28===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S017   - @GETREC D.POA001M,F.POPALF,F.MTMBPF,*EQ,PA01,PA02,PA03
     C**************************************************************************
29===C           S017      BEGSR
|    C                     Z-ADD1         WFILE#           SET FILE#
|    C                     MOVEL*BLANK    KA0101
|    C                     MOVELXA01      KA0101
|    C                     MOVEL*BLANK    KA0202
|    C                     MOVELXA02      KA0202
|    C                     MOVEL*BLANK    KA0303
|    C                     MOVELXA03      KA0303
|    C           K0001     CHAINPOPALF               9091
| 01-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD01           RD.SW.POPALF    MTMBP
| 01*C                     ELSE
|   C                     MOVE 'Y'       SWRD01           RD.SW.POPALF    MTMBP
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 01-C                     END
|    C*
|    C                     Z-ADD2         WFILE#           SET FILE#
|    C                     MOVEL*BLANK    KA0101           供應商代號
|    C                     MOVELPA01      KA0101
|    C           K0002     CHAINMTMBPF               9091
| 02-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD02           RD.SW.MTMBPF    POPAP
| 02*C                     ELSE
|   C                     MOVE 'Y'       SWRD02           RD.SW.MTMBPF    POPAP
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 02-C                     END
|    C*
|    C                     ADD  1         WCNTR            INCREMENT CNTR
29===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S018   - @GETBLK D.POA001M,F.POPAPF,*PV,SVK004,SVK005
     C**************************************************************************
30===C           S018      BEGSR
|    C*
|    C                     MOVEL*BLANK    KA0101
|    C                     MOVELSVK004    KA0101
|    C                     MOVEL*BLANK    KA0202
|    C                     MOVELSVK005    KA0202
|    C*
|    C*          ---------------------------------------------------------------
|    C*          | Initialize Loop
|    C*          ---------------------------------------------------------------
|    C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
|    C                     Z-ADDWRRN02    WLCNTR           INIT LOOP CNTR
|    C                     ADD  WADJ02    WLCNTR           ADD ADJ.CNTR
|    C*          ---------------------------------------------------------------
|    C*          | Setup Loop To Retrieve Record
|    C*          ---------------------------------------------------------------
| 01-C           SWRD03    DOUNE'Y'                        RD.SW.POPAPF
|   C           WCNTR     ORGE WLCNTR
|   C                     Z-ADD3         WFILE#           SET FILE#
|   C           K0003     REDPEPOPAPF                 9190
| 02-C           *IN90     IFEQ '1'
|   C           *IN91     OREQ '1'
|   C                     MOVE 'N'       SWRD03           RD.SW.POPAPF
|   C                     Z-ADD*ZERO     HRC03            ZERO HIDDEN RRN
| 02*C                     ELSE
|   C                     MOVE 'Y'       SWRD03           RD.SW.POPAPF
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
| 02-C                     END
|   C*
| 03-C           SWRD03    IFEQ 'Y'                        RD.SW.POPAPF
|   C                     ADD  1         WCNTR            INCREMENT CNTR
| 03-C                     END
| 01-C                     END
|    C                     EXSR S019                       CHK BOF
|    C                     READCSCR003S1               9190
30===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S019   - Process To Check BOF -  POPAPF
     C**************************************************************************
31===C           S019      BEGSR
|    C*
| 01-C           SWRD03    IFNE 'Y'                        RD.SW.POPAPF
|   C           STS03     ANDNE1122                       RCD LOCK
|   C           STS03     ANDNE1218                       RCD LOCK
|   C*
|   C                     MOVE 'Y'       SWRD03           RD.SW.POPAPF
|   C                     Z-ADDSTS03     SVS03            SAVE FILE STS
|   C                     MOVEL*BLANK    KA0101           供應商代號
|   C                     MOVELPA01      KA0101
|   C                     MOVEL*BLANK    KA0202           報價單號
|   C                     MOVELPA02      KA0202
|   C                     MOVEL*BLANK    KA0303           產品代號
|   C                     MOVELPA03      KA0303
|   C           K0001     SETLLPOPAPF
|   C                     Z-ADDSVS03     STS03            RESTORE FILE STS
|   C*
|   C                     MOVELA1,10     MSGDTA           The beginning of the
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 01-C                     END
31===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S020   - Process To Initialize SubFile - SCR003S1
     C**************************************************************************
32===C           S020      BEGSR
|    C                     MOVEA'0001'    *IN,63           SFLCLR,DSP,NXTCHG,INZ
|    C                     WRITESCR003C1                   CLEAR SUBFILE
| 01-C           1         DO   5         RRN2
|   C           RRN2      CHAINSCR003S1             90
|   C                     UPDATSCR003S1
| 01-C                     END
|    C*
|    C                     MOVEA'1110'    *IN,63           SFLCLR SFLDSP
|    C                     Z-ADD1         RRN2
32===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S021   - Process To Check EOF -  POPAPF
     C**************************************************************************
33===C           S021      BEGSR
|    C*
| 01-C           SWRD03    IFNE 'Y'                        RD.SW.POPAPF
|   C           STS03     ANDNE1122                       RCD LOCK
|   C           STS03     ANDNE1218                       RCD LOCK
|   C*
|   C                     MOVE 'Y'       SWRD03           RD.SW.POPAPF
|   C                     Z-ADDSTS03     SVS03            SAVE FILE STS
|   C                     MOVEL*BLANK    KA0101           供應商代號
|   C                     MOVELPA01      KA0101
|   C                     MOVEL*BLANK    KA0202           報價單號
|   C                     MOVELPA02      KA0202
|   C                     MOVEL*BLANK    KA0303           產品代號
|   C                     MOVELPA03      KA0303
|   C           K0001     SETGTPOPAPF
|   C                     Z-ADDSVS03     STS03            RESTORE FILE STS
|   C*
|   C                     Z-ADD1         WADJ02
| 02-C           WCNTR     IFNE *ZERO
|   C                     ADD  5         WADJ02
| 02-C                     END
|   C                     MOVELA1,11     MSGDTA           The end of the file w
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 01*C                     ELSE
|   C                     Z-ADDWRRN02    WADJ02
| 01-C                     END
33===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S022   - @WRITE D.POA001M,F.POPAPF
     C**************************************************************************
34===C           S022      BEGSR
|    C                     Z-ADD3         WFILE#           SET FILE#
B2000C                     Z-ADD*ZERO     PAXX             異動日期
|    C                     Z-ADD*ZERO     PAYY             異動時間
|    C                     MOVEL*BLANKS   PAZZ             異動者　
B2000C                     Z-ADD*ZERO     PA04             生效日期
B2000C                     Z-ADD*ZERO     PA06             截止日期
|    C                     MOVEL*BLANKS   PA07             付款條件
|    C                     MOVEL*BLANKS   PA08             幣別
|    C                     MOVEL*BLANKS   PA10             報價價格條件
|    C                     MOVEL*BLANKS   PA11             交易價格條件
|    C                     MOVEL*BLANKS   PA12             產品歸屬
|    C                     EXSR SMVTOF                     MOVE FLD TO FILE
|    C                     Z-ADD5         WFILE#           SET FILE#
|    C                     WRITEFMT002                 90  ADD REC TO POPAPF
|    C                     Z-ADDSTS05     STS03            SYNC STATUS
|    C*
| 01-C           *IN90     IFEQ *ZERO                      RECORD ADDED
|   C                     Z-ADDREC05     REC03
|   C                     Z-ADD3         WFILE#           SET FILE#
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
|   C                     MOVELA1,8      MSGDTA           Record added to file
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 01*C                     ELSE
|   C                     MOVELA1,9      MSGDTA           Unable to add record
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 01-C                     END                             END-STATUS
34===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S023   - @UPDATE D.POA001M,F.POPAPF
     C**************************************************************************
35===C           S023      BEGSR
|    C                     Z-ADD5         WFILE#           SET FILE#
|    C                     Z-ADDHRC03     REC03
|    C           HRC03     CHAINPOPAPFX              9091
|    C                     Z-ADDSTS05     STS03            SYNC STATUS
|    C*
| 01-C           *IN91     IFEQ '1'                        RCK LOCK
|   C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
| 01-C                     END
|    C*
| 02-C           *IN90     IFEQ '0'
|   C           *IN91     ANDEQ'0'
|   C*
| 03-C           PA01      IFEQ WRK001
|   C           PA02      ANDEQWRK002
|   C           PA03      ANDEQXA03
|   C           PA05      ANDEQXA05
|   C           PA09      ANDEQXA09
|   C                     EXCPTEXC002                     RLS LCK POPAPFX
| 03*C                     ELSE
|   C                     Z-ADD3         WFILE#           SET FILE#
|   C                     EXSR SMVTOF                     MOVE FLD TO FILE
|   C                     UPDATFMT002                 90  UPDATE POPAPF
|   C                     Z-ADDSTS05     STS03            SYNC STATUS
|   C*
| 04-C           *IN91     IFEQ '1'                        RCK LOCK
|   C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
| 04-C                     END
|   C*
| 05-C           *IN90     IFEQ '0'                        CANNOT UPDATE
|   C                     EXSR SMVTOW                     MOVE FLD TO WORK
|   C                     MOVELA1,4      MSGDTA           Record update for fil
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 05-C                     END                             END-UPDATE STATUS
| 03-C                     END                             END-FLD COMPARE
|   C*
|   C*
| 02*C                     ELSE
|   C                     MOVELA1,5      MSGDTA           Unable to update reco
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 02-C                     END                             END-STATUS
35===C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S024   - @DELETE D.POA001M,F.POPAPF
     C**************************************************************************
36===C           S024      BEGSR
|    C                     MOVEA'00'      *IN,90
|    C                     MOVE *HIVAL    SVS03
|    C                     MOVEL*BLANK    KA0101
|    C                     MOVELWRK001    KA0101
|    C                     MOVEL*BLANK    KA0202
|    C                     MOVELWRK002    KA0202
|    C                     MOVEL*BLANK    KA0303
|    C                     MOVELXA03      KA0303
|    C           K0001     SETLLPOPAPF                     SETLL  POPAPF
|    C*          ---------------------------------------------------------------
|    C*          | Setup Loop To Delete Record - POPAPF
|    C*          ---------------------------------------------------------------
| 01-C           *IN90     DOUEQ'1'
|   C           *IN91     OREQ '1'
|   C           SW0001    OREQ 'Y'
|   C*
|   C                     Z-ADD3         WFILE#           SET FILE#
|   C           K0001     READEPOPAPF                 9190READE  POPAPF
|   C*
| 02-C           *IN90     IFEQ '0'
|   C           *IN91     ANDEQ'0'
|   C*
|   C                     Z-ADD5         WFILE#           SET FILE#
|   C           REC03     CHAINPOPAPFX              9091
| 03-C           *IN90     IFEQ '0'
|   C           *IN91     ANDEQ'0'
|   C*
|   C                     DELETPOPAPFX                91  DELETE POPAPF
|   C                     Z-ADDSTS05     SVS03            SAVE FILE STS
|   C*          ---------------------------------------------------------------
|   C*          | Send Message To Indicate Delete Status
|   C*          ---------------------------------------------------------------
| 04-C           *IN91     IFEQ '0'
|   C                     MOVELA1,6      MSGDTA           Record deleted from f
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 04-C                     END                             END-DEL STATUS
|   C*
| 03*C                     ELSE                            END-READX-FILE
| 05-C           *IN90     IFEQ '1'                        NO RCD FOUND
|   C                     MOVELA1,7      MSGDTA           No record found to de
|   C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
|   C                     EXSR SMSG                       GET THE MESSAGE
| 05*C                     ELSE
|   C                     MOVE 'Y'       MSGFLG           SET ON ERROR FLAG
| 05-C                     END                             READ KEY FILE FAIL
|   C*
| 03-C                     END                             END-READKEY FILE
| 02-C                     END                             END-READ KEY FILE
| 01-C                     END                             EMD-DOUNE LOOP
|    C                     MOVEA'00'      *IN,90
|    C*
|    C           K0001     SETLLPOPAPF                     RESUME FILE POINTER
|    C                     Z-ADDSVS03     STS03            RESTORE FILE STS
36===C                     ENDSR
     C*
     C/EJECT
     C*****************************************************************
     C* *PSSR - Program Execution Errors Handler
     C*****************************************************************
37===C           *PSSR     BEGSR
| 01-C           UERCNT    IFNE *ZERO
|   C                     MOVEL'*CANCL'  URSUME
| 01*C                     ELSE
|   C                     Z-ADD1         UERCNT
|   C                     MOVE 'R'       MSGACT
|   C                     MOVE *BLANKS   MSGF
|   C                     MOVEL'QCPFMSG' MSGF
|   C                     MOVE *BLANKS   MSGFL
|   C                     MOVEL'QSYS'    MSGFL
|   C                     MOVE *BLANKS   MSGDTA
| 02-C           UMSGTX    IFNE *BLANKS
|   C                     MOVELUMSGTX    MSGDTA
| 02*C                     ELSE
|   C                     MOVELUROUTN    MSGDTA
| 02-C                     END
|   C*
| 03-C           USTAT     IFEQ *ZEROS
|   C                     MOVE UFSTAT    USTAT
|   C                     MOVE UFSRCL    USRCLN
| 03-C                     END
|   C                     MOVE USTAT     USTAT4
|   C*
| 04-C           MSGID     IFEQ *BLANKS
|   C                     MOVE USTAT4    MSGID
|   C                     MOVEL'RPG'     MSGID
|   C                     MOVEL'QRPGMSGE'MSGF
| 04-C                     END
|   C*
|   C                     CALL 'CLMSG'   PMSGCL         93
|   C*
|   C                     MOVEL'1'       UEROPT
|   C                     EXFMTPSSR0001
|   C*
| 05-C           UEROPT    IFEQ '1'
|   C                     MOVEL'*GETIN  'URSUME
| 05*C                     ELSE
| 06-C           UEROPT    IFEQ '2'
|   C                     MOVEL'*CANCL  'URSUME
| 06*C                     ELSE
| 07-C           UEROPT    IFEQ '3'
|   C                     MOVE '        'URSUME
| 07-C                     END
| 06-C                     END
| 05-C                     END
| 01-C                     END
|    C*
|    C                     MOVEL*BLANK    MSGID
|    C                     MOVE *ZERO     UERCNT
|    C*
37===C                     ENDSRURSUME
     C*/EJECT
     C*****************************************************************
     C* SATRIB - Display Attribute Handler
     C*****************************************************************
38===C           SATRIB    BEGSR
|    C*
|    C* FIND TABLE OFFSET BY SCREEN ID AND FIELD NAME AND FIELD INDEX
|    C*
|    C                     Z-ADD1         X0
|    C           #MAP      LOKUPDA1,X0                   90
| 01-C           *IN90     IFEQ '1'                        IF FIND
|   C                     MOVEADA2,X0    DA3
|   C*
|   C*          ------------------------------------------------------
|   C*          | @DSPERR/VALIDATION FIELD DISPLAY ATTRIBUTES
|   C*          ------------------------------------------------------
| 02-C           DSPERR    IFNE *BLANK
| 03-C           DA3,6     IFNE *BLANK                     TURN ON *PC
|   C                     MOVE DA3,6     X1
| 04-C           DSPERR    IFEQ 'X'
|   C                     MOVE '0'       *IN80
|   C                     MOVEA'1'       *IN,X1
| 04*C                     ELSE                            x-DSPERR EQ 'X'
|   C                     MOVEA'0'       *IN,X1
| 04-C                     END                             DSPERR EQ 'X'
| 03-C                     END                             DA3,6 NE *BLANK
|   C*
| 05-C           DA3,2     IFNE *BLANK                     TURN ON *RI
|   C                     MOVE DA3,2     X1
| 06-C           DSPERR    IFEQ 'X'
|   C                     MOVEA'1'       *IN,X1
| 06*C                     ELSE                            x-DSPERR EQ 'X'
|   C                     MOVEA'0'       *IN,X1
| 06-C                     END                             DSPERR EQ 'X'
| 05-C                     END                             DA3,2 NE *BLANK
|   C*
| 07-C           DA3,3     IFNE *BLANK                     TURN OFF *UL
|   C           DA3,16    ANDEQ' Y'                       KEEP UL
|   C                     MOVE DA3,3     X1
| 08-C           DSPERR    IFEQ 'X'
|   C                     MOVEA'0'       *IN,X1
| 08*C                     ELSE                            x-DSPERR EQ 'X'
|   C                     MOVEA'1'       *IN,X1
| 08-C                     END                             DSPERR EQ 'X'
| 07-C                     END                             DA3,3 NE *BLANK
| 02*C                     ELSE                            x-DSPERR NE *BL
|   C*
|   C*          ------------------------------------------------------
|   C*          | *DS - RESET FIELD DISPLAY ATTRIBUTES
|   C*          ------------------------------------------------------
| 09-C           #DS       IFNE *BLANK
| 10-C           1         DO   15        X0
| 11-C           DA3,X0    IFNE *BLANK
| 12-C           X0        IFEQ 3
|   C           DA3,16    ANDEQ' Y'
| 12*C                     ELSE                            x-X0 EQ 3
|   C                     MOVE DA3,X0    X1
|   C                     MOVEA'0'       *IN,X1
| 12-C                     END                             X0 EQ 3
| 11-C                     END                             DA3,X0 NE *BLAN
| 10-C                     END                             1 DO 15
|   C*          ------------------------------------------------------
|   C*          | *DS - TURN ON ORIGINAL COLOR ATTRIBUTES
|   C*          |       IF THERE IS NO COLOR SPECIFIED
|   C*          ------------------------------------------------------
| 13-C           DA3,17    IFNE *BLANK
|   C           #GN       ANDEQ*BLANK
|   C           #RD       ANDEQ*BLANK
|   C           #WT       ANDEQ*BLANK
|   C           #PK       ANDEQ*BLANK
|   C           #TQ       ANDEQ*BLANK
|   C           #YW       ANDEQ*BLANK
|   C           #BU       ANDEQ*BLANK
|   C                     MOVE DA3,17    X1
|   C                     MOVEA'1'       *IN,X1
| 13-C                     END                             DA3,17 NE *BLAN
| 09-C                     END                             #DS NE *BLANK
|   C*
|   C*          ------------------------------------------------------
|   C*          | LOOP TO TURN ON/OFF ATTRIBUTE INDICATORS
|   C*          ------------------------------------------------------
| 14-C           1         DO   15        X0
| 15-C           DA3,X0    IFNE *BLANK
|   C                     MOVE DA3,X0    X1
|   C*          ------------------------------------------------------
|   C*          | TURN ON ATTRIBUTE INDICATORS
|   C*          ------------------------------------------------------
| 16-C           DA6,X0    IFNE *BLANK
|   C                     MOVEA'1'       *IN,X1
| 16*C                     ELSE                            x-DA6,X0 NE *BL
|   C*          ------------------------------------------------------
|   C*          | FOR COLOR ATTRIBUTE, RESET OTHER COLOR THAT ARE
|   C*          | NOT SPECIFIED.
|   C*          ------------------------------------------------------
| 17-C           X0        IFGE 9
|   C           X0        ANDLE15
| 18-C           #GN       IFNE *BLANK
|   C           #RD       ORNE *BLANK
|   C           #WT       ORNE *BLANK
|   C           #PK       ORNE *BLANK
|   C           #TQ       ORNE *BLANK
|   C           #YW       ORNE *BLANK
|   C           #BU       ORNE *BLANK
|   C                     MOVEA'0'       *IN,X1
| 18-C                     END                             #GN NE *BLANK
| 17-C                     END                             X0 GE 9
| 16-C                     END                             DA6,X0 NE *BLAN
| 15-C                     END                             DA3,X0 NE *BLAN
| 14-C                     END                             1 DO 15
| 02-C                     END                             DSPERR NE *BLAN
| 01-C                     END                             *IN90 EQ '1'
|    C*
|    C                     MOVE *BLANK    #ATRIB
38===C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SLOCK - Update Lock Flag
     C*****************************************************************
39===C           SLOCK     BEGSR
| 01-C           STS01     IFEQ 1218                       LOCK(SYS)-POPALF    M
|   C           STS01     OREQ 1122                       LOCK(ASSET)
|   C                     Z-ADD*ZERO     LCK01            SET OFF LOCK FLAG
| 01*C                     ELSE
|   C                     Z-ADD1         LCK01            SET ON LOCK FLAG
| 01-C                     END
39===C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SFERR - File Exception Handler
     C*****************************************************************
40===C           SFERR     BEGSR
|    C                     MOVE 'Y'       MSGFLG           MSG FLAG ON
| 01-C           WFILE#    IFEQ 1                          POPALF
| 02-C           STS01     IFEQ 1218                       LOCK(SYS)
|   C                     Z-ADD1122      STS01            ASSET LOCK STATUS
| 02*C                     ELSE
| 03-C           STS01     IFEQ 1211                       CLOSED FILE
|   C                     EXSR *PSSR
| 03*C                     ELSE
|   C                     Z-ADD1121      STS01            TRIGGER TO EXEC NEXT
| 03-C                     END
| 02-C                     END
| 01-C                     END
| 04-C           WFILE#    IFEQ 2                          MTMBPF
| 05-C           STS02     IFEQ 1218                       LOCK(SYS)
|   C                     Z-ADD1122      STS02            ASSET LOCK STATUS
| 05*C                     ELSE
| 06-C           STS02     IFEQ 1211                       CLOSED FILE
|   C                     EXSR *PSSR
| 06*C                     ELSE
|   C                     Z-ADD1121      STS02            TRIGGER TO EXEC NEXT
| 06-C                     END
| 05-C                     END
| 04-C                     END
| 07-C           WFILE#    IFEQ 3                          POPAPF
| 08-C           STS03     IFEQ 1218                       LOCK(SYS)
|   C                     Z-ADD1122      STS03            ASSET LOCK STATUS
| 08*C                     ELSE
| 09-C           STS03     IFEQ 1211                       CLOSED FILE
|   C                     EXSR *PSSR
| 09*C                     ELSE
|   C                     Z-ADD1121      STS03            TRIGGER TO EXEC NEXT
| 09-C                     END
| 08-C                     END
| 07-C                     END
| 10-C           WFILE#    IFEQ 4                          POPALFX
| 11-C           STS04     IFEQ 1218                       LOCK(SYS)
|   C                     Z-ADD1122      STS04            ASSET LOCK STATUS
| 11*C                     ELSE
| 12-C           STS04     IFEQ 1211                       CLOSED FILE
|   C                     EXSR *PSSR
| 12*C                     ELSE
|   C                     Z-ADD1121      STS04            TRIGGER TO EXEC NEXT
| 12-C                     END
| 11-C                     END
| 10-C                     END
| 13-C           WFILE#    IFEQ 5                          POPAPFX
| 14-C           STS05     IFEQ 1218                       LOCK(SYS)
|   C                     Z-ADD1122      STS05            ASSET LOCK STATUS
| 14*C                     ELSE
| 15-C           STS05     IFEQ 1211                       CLOSED FILE
|   C                     EXSR *PSSR
| 15*C                     ELSE
|   C                     Z-ADD1121      STS05            TRIGGER TO EXEC NEXT
| 15-C                     END
| 14-C                     END
| 13-C                     END
40===C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SMVTOF - Move Fields From Work Area To File(s)
     C*****************************************************************
41===C           SMVTOF    BEGSR
|    C*          ------------------------------------------------------
|    C*          | Move Fields From Work Area To File - POPALF
|    C*          ------------------------------------------------------
| 01-C           WFILE#    IFEQ 01
|   C                     MOVELXA01      PA01             供應商代號
|   C                     MOVELXA02      PA02             報價單號
|   C                     MOVELWA03      PA03             產品代號
B2REM ***************************
B2REM ****  CONVERSION START  ***
B2REM ***************************
B2OLDC*                    Z-ADDXA04      PA04             生效日期
B2NEWC                     MOVE XA04      HB2@F6  6
B2NEWC                     EXSR HB@68L                     + CENTURY 6->8 LEFT
B2NEWC                     MOVE HB2@T8    PA04
B2REM ***************************
B2REM *****  CONVERSION END  ****
B2REM ***************************
B2REM ***************************
B2REM ****  CONVERSION START  ***
B2REM ***************************
B2OLDC*                    Z-ADDXA06      PA06             截止日期
B2NEWC                     MOVE XA06      HB2@F6  6
B2NEWC                     EXSR HB@68L                     + CENTURY 6->8 LEFT
B2NEWC                     MOVE HB2@T8    PA06
B2REM ***************************
B2REM *****  CONVERSION END  ****
B2REM ***************************
|   C                     MOVELXA07      PA07             付款條件
|   C                     MOVELXA08      PA08             幣別
|   C                     MOVELXA10      PA10             報價價格條件
|   C                     MOVELXA11      PA11             交易價格條件
| 01*C                     ELSE
|   C*          ------------------------------------------------------
|   C*          | Move Fields From Work Area To File - POPAPF
|   C*          ------------------------------------------------------
| 02-C           WFILE#    IFEQ 03
|   C                     MOVELWRK001    PA01             供應商代號
|   C                     MOVELWRK002    PA02             報價單號
|   C                     MOVELXA03      PA03             產品代號
|   C                     MOVELXA05      PA05             供應商產品代號
|   C                     Z-ADDXA09      PA09             單價
| 02-C                     END
| 01-C                     END
41===C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SMVTOW - Move Fields From File(s) To Work Area
     C*****************************************************************
42===C           SMVTOW    BEGSR
|    C*          ------------------------------------------------------
|    C*          | Move Fields From File To Work Area - POPALF
|    C*          ------------------------------------------------------
| 01-C           WFILE#    IFEQ 01
|   C                     MOVELPA01      XA01             供應商代號
|   C                     MOVELPA02      XA02             報價單號
|   C                     MOVELPA03      WA03             產品代號
B2TRCC                     Z-ADDPA04      XA04             生效日期
B2TRCC                     Z-ADDPA06      XA06             截止日期
|   C                     MOVELPA07      XA07             付款條件
|   C                     MOVELPA08      XA08             幣別
|   C                     MOVELPA10      XA10             報價價格條件
|   C                     MOVELPA11      XA11             交易價格條件
|   C                     Z-ADDREC01     HRC01
|   C                     MOVELPA01      HA01             供應商代號
|   C                     MOVELPA02      HA02             報價單號
|   C                     MOVELPA03      HA03             產品代號
| 01*C                     ELSE
|   C*          ------------------------------------------------------
|   C*          | Move Fields From File To Work Area - MTMBPF
|   C*          ------------------------------------------------------
| 02-C           WFILE#    IFEQ 02
|   C                     MOVELMB03      XB03             供應商簡稱
|   C                     MOVELMB01      HB01             供應商代號
| 02*C                     ELSE
|   C*          ------------------------------------------------------
|   C*          | Move Fields From File To Work Area - POPAPF
|   C*          ------------------------------------------------------
| 03-C           WFILE#    IFEQ 03
|   C                     MOVELPA01      WRK001           供應商代號
|   C                     MOVELPA02      WRK002           報價單號
|   C                     MOVELPA03      XA03             產品代號
|   C                     MOVELPA05      XA05             供應商產品代號
|   C                     Z-ADDPA09      XA09             單價
|   C                     Z-ADDREC03     HRC03
|   C                     MOVELPA01      HID001           供應商代號
|   C                     MOVELPA02      HID002           報價單號
|   C                     MOVELPA03      HID003           產品代號
| 03-C                     END
| 02-C                     END
| 01-C                     END
42===C                     ENDSR
     C/EJECT
     C*****************************************************************
     C*        O u t p u t       S p e c i f i c a t i o n
     C*****************************************************************
     O*
     O* EXCEPT To Release Record Lock From POPALFX
     O*
B2REM ***************************
B2REM ****  CONVERSION START  ***
B2REM ***************************
B2NEWC/COPY HBP2CVTR
B2REM ***************************
B2REM *****  CONVERSION END  ****
B2REM ***************************
     OPA0X    E                EXC001
     O*
     O* EXCEPT To Release Record Lock From POPAPFX
     O*
     OFMT002  E                EXC002
     O*
     C/EJECT
     C*****************************************************************
     C*            C o m p i l e   T i m e   A r r a y
     C*               I n i t i l a l i z a t i o n
     C*****************************************************************
**  CMD -- OS/400 Commands array
SIGNOFF
**   Alpha Constant Array - A1
Record not found for Edit
Record not found for Delete
Record not found for Display
Record update for file 供應商產品報價檔
Unable to update record for file 供應商產品報價檔
Record deleted from file 供應商產品報價檔
No record found to delete from file 供應商產品報價檔
Record added to file 供應商產品報價檔
Unable to add record to file 供應商產品報價檔
The beginning of the file was reached
The end of the file was reached
Record Not Found
Invalid action choice
**   Display Attribute Map Array - DA1
                         H R U B C P N P G R P W T Y B K O
Screen    Field/Grp Idx  I I L L S C D R N D K T Q W U U C
=========+=========+===+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=============
SC0001    PS0101    0000              03
SC0001    PS0102    0000              04
SC0001    PS0103    0000              05
SC0001    FL0001    0000  0102    01                   Y
SC0002    XA04      0000              01
SC0002    XA08      0000              04
SC0002    XA07      0000              03
SC0002    XA10      0000              05
SC0002    XA11      0000              06
SC0002    XA06      0000              02
SC0003    FL0003    0000  0102    01                   Y
